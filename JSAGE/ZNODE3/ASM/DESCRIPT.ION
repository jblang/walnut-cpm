18E.LBR 18E.LBR contains a significant upgrade to Z8E.LBR (Z80 debug monitor originated by Richard Surwilo). In addition to all functions of Z8E, 18E offers full HD64180 support. Also, 18E supports an auxiliary debug terminal support facilitating software development of screen oriented applications. Some bugs are fixed also. Included is a 9 page supplement to Z8E.DOC called 18E.DOC. The source to 18E is also available in the 18E-SRC.LBR library file. Damon R. Gibson
ANY4.LBR Modification of Bridger Mitchell's routine from Computer Journal #33 to relocate and run a PRL-format program anywhere in memory. This version optionally allows passing of registers, simplifies program building using MLOAD, and "pulls" the relocated code down to the actual load address rather than leaving the where_am_I and relocator routines in place and jumping over them to get to the program. July 18, 1988
CHKIF.LBR CHKIF processes .ASM, .Z80 or .PRN files, checking that the IF-ELSE-ENDIF statements are matched properly. It also handles MACRO/REPT/IRP/IRPC-EXITM ENDM pseudo-ops, and takes the multi-statement lines of ASM and MAC, etc. provided they are delimited with exclamation marks!
DDTZ27.ARK C.B. Falconer updates his fabulous DDT replacement to add 64180 opcodes and more undocumented Z80 opcodes.
DISA-REL.LBR REL file disassembler
DISREL.LBR REL file disassembler
GEN180.LBR Auto-patcher that converts Microsoft M80 (Version 3.4 or 3.44) into a fully functional HD64180 assembler. No Z80 or 8080 capability is lost, so this is a pure enhancement that adds only two records to the assember's size. A very nice contribution from West Germany. November 30, 1987, via NAOG/ZSIG
L80RST.LBR Speeds up Microsoft L80 V 3.44 by patching out the disk system resets.
LASM3.LBR Link/Asm 3: 8080 assembler with .DOC file (See discription for lasm3.obj for more info)
M80STR11.LBR This is a macro library for the M80 assembler that implements some structured programming constructs such as if.then.else, do.while.enddo, do.until.enddo, and switch.case.case.otherwise.endsw. Version 1.10 fixes a bug in the "switch" construct that caused bad branches to be generated when multiple switch constructs were nested. If you have M80STRUCT.LBR, replace it with this (M80STR11.LBR).
MLOAD25.LBR Update of the very popular MLOAD24 program used by many CP/M owners, in place of LOAD.COM. This version fixes a problem a few ZCPR users had with it overwriting the CCP and then locking the system as a warm reboot was not offered. This did not affect the user of the program, only when finished and sometimes could not exit back to CCP properly. By Ron Fowler of NightOwl and MEX114/+ fame. Enjoy ===JERRY M.===
MUSICBOX.LBR Sample code that demonstrates DSEG, CSEG and COMMON functions with the SLR assembler and linker. These modules link together to create a small program that plays a tune on nearby radios. The point of the code however is to demonstrate the assembler and linker. If the Z librarys are available then a Z version is produced otherwise the output is standard CP/M compatible.
MYLOAD.LBR MYLOAD is a replacement for MLOAD and related programs which are intended to load HEX files to COM or overlay binary files (COM, PRL etc) with HEX overlays. It is a Z-Tool, and functions correctly under NZCOM with odd- sized CCPs and BDOSes. Source and a config file for changing defaults with Al Hawley's ZCNFG are included.
PATDDTZ.SZB Bruce Morgen supplies a ZEX/EX file to path DDTZ version 2.7 to default DDT command set rather than the distributed DEBUG command set.
PDLN10.LBR A Public Domain version of Microsoft's L80, Digital Research's LINK, and SLR System's SLRNK. And it's FREE! PDLN is a linking loader. It takes one or more .REL files, which are non-executable files created by assemblers, loads them into memory, resolves links between them, and creates an executable .COM file. Symbol table can be used with a debugger. It can search through library files (in the .REL format) and extract only the necessary modules.
PROTCCP.LBR From the time you run PROTCCP until the next warm boot, the system will think that the BDOS is below the CCP so that transient programs, and notably debuggers, will not overwrite the CCP. I wrote this program to help me debug the new ZCPR command processor that I am readying for release. I just enter the command line PROTCCP;DSDZ XCPR.SYM, and I can perform in situ, full-screen, symbolic debugging of the command processor. Jay Sage, 02/05/87
PRTVAL.ZZ0 a handy pair of Macros for printing values during assembly. Demo included.
RELHEX11.LBR No description available.
RELS.UTL No description available.
REVAS25.DOC Al Hawley has released version 2.5 of his excellent disassembler into the public domain. I have used REVAS3 extensively and love it. Perhaps people will use version 2.5 and develop a taste for the real thing and want to buy it.
Z280-J88.LBR Some messages captured from ZNODE Central and another RCP/M concerning the Z280 processor from Zilog, dated 12/87.
Z280ASM3.LBR Some macros to help assemble Z280 code using ZAS 2.6. Other assemblers use to much TPA for all the macros to fit, though the macros could be broken up. From Dan Jacobs
Z8E-30.ARK A update to Rick Surwilo's debug/trace utility for Z80 CP/M. Now handles .PRN files produced by SLR's Z80ASM 1.3 while still maint-aining the ability to load symbols from M80 .PRN files. Includes full source code, manual and associated files and programs.
Z8E3BUG.FIX Description of a bug fix for Z8E30. The message is from Jon Saxton, the program's author.
ZDDTZ.ZZX This simple patch makes C.B. Falconer's DDTZ respond to DIR as well as DU file specifications. To install, dump any command history processor in memory, put copy of DDTZ.COM in same directory with this file and issue this command: ZEX ZDDTZ. That's all there is to it. Get DDTZ.COM and it's documentation from DDTZ.LBR, available from Z-Nodes. Fred Haines, 4-23-87
ZDT.OBJ No description available.
ZSIDFIX.DOC Have you ever wandered why ZSID.COM does not display memory DUMP in the same format as DDT or SID. This file shows how to patch ZSID to make the same dump display.
ZSM.LBR ZSM is a Z80 macro assembler, with a linker, librarian, and some other utility programs, together with an extensive library. Documentation is provided explaining the workings of ZSM etc., the format of relocatable files, and the functions provided in the libraries. Symbol table files for use with debuggers such as ZSID can be produced. Output code can be relocated for use in (say) a PROM.
ZXLATE14.LBR An 8080 to Z80 source code translator. Uploaded for Jay. -Bill T.
