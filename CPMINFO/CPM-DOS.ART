==============================================================================
|--- The KAY*FOG PUBLIC COMPUTER BULLETIN BOARD SERVICE, in San Francisco ---|
|--- Document Filename = CPM-DOS.ART | published 12/09/84 | 171 lines 10k ---|
==============================================================================

                CP/M or MS-DOS                      Originally published in
    What's the difference? Which is better?                 ARTICLES
                      by                          The KAY*FOG Online Magazine
                  Bond Shands                            P.O. Box 11135
                                                 San Francisco, CA 94101-7135

     In reviewing some of the recent comments surrounding
WordStar 2000, I have particularly noted the concern that this,
and other products, represent some sort of abandonment of the
CP/M community by software authors and distributors.  I believe
this to be a misperception upon the part of CP/M users, one based
upon a lack of knowledge about their own systems, its limitations
and the relatively new 16-bit computers (those using the MS-DOS
operating system).

     In some respects, the differences between the 8-bit CP/M
systems (Kaypro, Morrow, Osborne, etc.) and the 16-bit MS-DOS
systems (IBM-PC, Tandy 2000, etc.) are no less vast than the
differences between microcomputers and the large mainframe
systems such as the IBM 370 family.  While the term computer may
be applied fairly as one referring to a family of electronic
machines, the differences within that family are sufficiently
great to make comparisons almost a joke.  They may all be
computers, but twins or even close relatives, they certainly are
not!

     There are some very significant distinctions between 8-bit
and 16-bit computers and it is those differences which are the
reason new products are being created for one, and not being made
available for the other.

     The typical 64K, 8-bit computer has a usable memory size of
from 48 to 64 thousand characters.  Understanding this fact and
its impact upon the type of programs which may be written for
these systems is very important.  Within that area of usable
memory, there must be room to fit an entire working program
together with any space which may be needed to allow for data
entry from the console.  A typical word processing program needs
space for not only itself, but memory space to hold everything
appearing on your screen - and then some.  Everything else
associated with the word processing program must reside on disk
space from where it is loaded, updated and saved during the time
the program is being used.

     A program like WordStar is a good example of programming
ingenuity in terms of efficient space utilization in order to
provide a good word processing environment in a small memory
space machine.  WordStar is a three-program system (WS.COM,
WSMSGS.OVR and WSOVLY1.OVR) which would never completely fit
together at one time in the memory space of a 64K machine.  In
stead, in order to operate, WS.COM is loaded and portions of the
other two files (the .OVR files) are called into memory whenever
they are needed.  This leaves quite a bit of room for memory to
also hold the characters from whatever document is being edited.
Even so, portions of large document files must reside in a
temporary work file on disk because of insufficient memory space
to hold everything at one time.  Much of this is noticeable to
floppy disk users because certain commands will produce evidence
of disk read/write activity before and during presentation of
anticipated results on a screen.

     The memory size limitation of a computer determines what may
be accomplished by any given program.  I personally view the work
of some CP/M programmers as nothing less than the product of very
great mind! Fitting some of the programs I've seen into a 64K
environment is an accomplishment of marvelous ingenuity.
However, even the greatest of programmers admit that 64K memory
limits the number of features they may wish to build into a
program.

     Now we have a new world of 16-bit machines which are widely
available to the personal computer owning public.  And, like it
or not, 16-bit represents that which is bigger and better when
contrasted to their smaller 8-bit, somewhat distant relatives.
With 16-bit, you have lots more of that precious memory in which
to run large programs and hold vast amounts of file data.  No
need to scrimp on features, built-in prompts, numerous overlay
files and resorting to frequent disk references during program
execution.  128 thousand, 512 thousand even a million or more
characters may be placed into the memory of large 16-bit
machines.

     That's a lot of room and, compared to 64K, truly represents
a programmer's dream.  With all that memory capability, most of
the truly innovative software creators have rushed to create
marvelous new programs with capabilities never dreamed as being
possible in a smaller memory environment.  Lotus 1-2-3, dBASE
III, Windows and now WordStar 2000 are all products which are
designed for large memory machines and which certainly could not
be duplicated in a 64K environment!

     Oh, I suppose some genius could take one of these, split the
code into a dozen or more overlay files and get most of the
features to work in a 64K environment.  But, just watch those
disk drives whirl, listen to the whirr as a new overlay file is
loaded in response to each new command.  Talk about user
dissatisfaction, the distributor would quickly see an army of
refund-seeking 8-bit machine owners camped on his door if one
attempted to market a multi-overlay version for 8-bit systems, of
some of the new, large programs designed for the 16-bit machines.
Let's face it folks, battleships are not suitable for river
cruises and neither are good 16-bit programs usable for small 64K
systems.

     Since 16-bit systems are so much bigger and better, why then
don't I advocate junking the smaller systems and tell everyone to
buy an MS-DOS system?  Well, it's still the same old answer
you've all heard before - with my own editorial comments thrown
in.

     First decide what you want to do with a system, find the
software you need and then pick out the hardware which best meets
those needs.

     Now, for the guy who always owns Cadillac automobiles, lives
only in mansions and penthouses and buys only the newest and best
of everything, this advice is valueless.  But, for those who are
interested in value for the dollar and budget their expenditures
according to actual need, then some should stick with the
smaller, cheaper 64K machines and others, because of special
computing needs, will have to move to the more expensive, 16-bit
systems.

     I personally don't own a 16-bit system.  While it is true
that there are many applications available for 16-bit that I
admire, would like to have, there are none that I actually NEED
and can cost justify to myself.  I have a substantial investment
in 8-bit hardware and software; and have found that all of my
real needs are being satisfied by those systems.

     My advice to all continues to be to first decide what you
would like to accomplish with a computer, determine how much you
are prepared to spend and then I will gladly provide you with a
list of cost-effective alternatives.  On the other hand, if you
just happen to be a bell-n-whistle lover or are in a race to
"keep up with the Joneses", then nothing I have to say will
really be of value to you.

     To my fellow CP/M users, I say be proud of your systems,
take pride in the decision which caused you to be a 64K machine
owner.  The finest, most efficiently written programs to be found
in computing today, are those which run on 8-bit systems.  It may
not be a Cadillac but it doesn't carry a Cadillac price tag in
terms of original cost, maintenance and software acquisition
dollars.

     And, above all, don't feel resentment towards the 16-bit
machines because of programs which are being developed for their
larger environments.  Those owners of the more expensive systems
are surely entitled to a few advantages in return for their
greater expenditures - and neither your envy nor laughter is
really a satisfactory substitute.

     By the way, not all 16-bit machines have turned out to be
better - bigger maybe, but certainly not better.  One prominent
16-bit machine was/is so poorly designed, that I would find it
hard to recommend its purchase to anyone.  Its only redeeming
feature is that a truly vast quantity of new software has been
written to run on it.  So, the owner ends up with great software
which only runs on a piece of technological junk.  Someone has to
pay for progress, I guess - glad its not you nor I.

------------------------------------------------------------------------------
-- THE KAY*FOG PCBBS -=*=-  End  CPM-DOS.ART Text  -=*=- MODEM 415:285-2687 --
------------------------------------------------------------------------------
кц