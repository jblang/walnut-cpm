  This file is a short introduction to what it takes to set up an
RCPM BBS system on the Commodore 128.  It started out as a series of letters
and ...

Hi Gary !  Welcome to Uhura.
 If you want to get a RCPM system going for your 128 you will need
 1) the DR offer assemblers and tools
 2) the source for BYE510  you can get them from George Peace or 
    likely any of the numbers listed in the CAL menu of IMP
   George Peace's instructions are great but are missing about 2
   points a] assemble B5-CPM3.ASM and B5-DRIV3.ASM with MAC, and
          b] GENCOM BYE[LOADER]    after you HEXCOM B5-CPM3 and
				   RENAME BYE.COM=B5-CPM3.COM
           this saves a couple of hundred bytes in the .COM files
	   and keeps the loader active after BYE is called to start running the 
	   system.
 3) a copy of B5C8-2.INS  or -1E.ins on my system here.
 4) a copy of my clock code of BYE and the C=128, I will try to keep a 
    copy of the current code up till I hack together a complete .INS for
   general distribution. ... the regular B5C-CPM3.INs should have worked with
   non-interupt driven clock routien, but for some reason it will not work in
   the location BYE places the TIME:  in !
 5) a copy of CCP003+.LBR  this is the alternate CCP that you see here. It's
main feature is that it takes ERA and REN out, and requires them to be seperate
 .COM files.  And so they can be kept where needed.
 Number 6 would have been a copy of PBBS3.LBR until a few days ago,  perhaps I
will find out what went wrong.  This would add the Microsoft M80 assembler
packlage to the tools you would need too.
  1 through 5 will get you a basic RCPM system.  It is the basis of most
CPM BBS systems.  
 
   Good Luck !
 
  Dave
 
Dave,
Thanks for the help and the advice.  THe only problem I have right now 
is installing the insert.  All the file editors that I have either will
not allow me to insert another file, or will not handle the size of the
file.  I am going to solve that problem next week when my copy of 
NewWord arrives.  Then I will be able to do the insert.  

I am pretty new to CPM and all that it entails,  but I find that it is 
fasinating and a challenge.   I am looking forward to an exchange of
information as we each try and set up a working system on the 128.

I already have copy of PBBS3, but I do not have the compiler, however a 
friend of mine does and he can do the compiling for me.  

Till later....
Gary Eide


  Hi Gary,
  It is sort of easy to break bye up into parts that VDE can work on.
  PIP has an option to allow you to take text files apart and put them
back together. from the * enter something like
B1=bye510c.asm[QSubR^Z]<cr>   <cr> is a carrage return and ^Z is the
 control Z   that will create a file B1 that is the start of BYe510
up to just befor the place to add the .INs.
  then at the *
B2=Bye510c.asm[SSUBR^ZQWHOSIT:^Z]<cr>
               ^ = start  at string
                      ^   Q = stop  at string
B3=Bye510c.asm[SWHOSIT:^Z]<cr>
 the <CR> out of PIP and you have 3 files that you can edit and 
insert things into.  when you want to compile use pip to
    bye5.asm=b1,B5C8-3.ins,b2,b3<cr>
 to make  a complete file again.  You can do a similar thing with the
fully commented file too to get editable (with VDE).

  I am not sure about PBBs 3 now.. It isn't up here because of problems.
Maby I will find a patch..

Good Luck
  Dave


BYE and the commodore 1670  1200 baud modem.

  The procedure outlined above works well with the C=128 and just about any
Hayes compatable modem hung off an RS232 interface.  The 1670 is not completly
Hayes compatable, so some work is needed get around the incompatablity. I have
a few ideas on how to accomplish this, but it requires someone with one of
these modems and a little knowledge of 8080 assembler to implement these 
'patches' and try them out. 
 (I should say that I use the DUMB modem EQUates  ie. say NO to IMODEM
  and B5IM..  this keeps things very simple, and will make future modification
  like FIDO compatability easier to implement. )
  First some sort of patch is needed in the NODTR section of Bye as the 1670
doesnt support a DTR line. This is used to hang up the modem and keep it off
while the system reinitializes.  This can be done on the 1670 by outputting
three plus signs and an S0=0. I am not sure if an AT is needed before the
S0=0.  Later an S0=1 must be given to get the modem to answer again.
  These simple mods should allow the 1670 to work,.. or atleast get it
ready for the next set of patches!
 to answer again.
  These simple mods should allow the 1670 to work,.. or atleast get it
ready for the next set of pat