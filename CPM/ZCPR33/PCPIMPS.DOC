   PCPIMP is a wonderful program, but for Z users it's a bit thick†ç
about finding its overlay or chaining to the comm program.  It looks†ç
for them only in the directory from which it was evoked, which makes†ç
it impossible to run IMP and IMP2Z from ALIAS.CMD.  Here's how I†ç
solved the problem:
   I use an integrated SETDRU to force PCPIMP to look for PCPIMP.DAT†ç
in the public A1:OVERLAYS directory and for IMP.COM in A0:BASE (where†ç
PCPIMP.COM is also located).  I then took the IMP command line out of ç
A15:ALIAS.CMD and used SALIAS to recreate it as a standalone,†ç
recursive alias called IMP.COM in the A0:BASE directory:

   ZOSIMP T;ZOSIMP2Z

Be sure to put SALIAS in recursive mode for this.  ZOSIMP is nothing†ç
but IMP.COM renamed in order to work with IMP2Z.  I can now call†ç
PCPIMP from any directory in my system and have the shell feature of†ç
IMP2Z as well.
     I start things from ZFILER with the macro command line:

   SHSET PCPIMP;CMD

which makes PCPIMP into a shell.  IMP2Z (renamed ZOSIMP2Z.COM) causes†ç
IMP (ZOSIMP) to behave like a shell if I duck out to locate or write†ç
a file, and PCPIMP itself is now a shell, reinvoking itself if I exit†ç
from IMP with CPM (or ZOS) without a multiple command line.  If I†ç
decide to exit from PCPIMP at that point rather than make a new†ç
connection, I get the CMD prompt, which allows me to exit with the†ç
command SHCTRL P(OP).  I use an ALIAS.CMD line: POP shctrl p.  If I†ç
have second thoughts and want to reinvoke PCPIMP, a simple CR will do†ç
it.
     Incidentally, for local calls, I use another ZF macro which is†ç
just:

   IMP

This calls the recursive alias IMP.COM in A0:BASE and proceeds
normally.  The T in the alias command line cuts out the IMP sign-on
and command line, which is a bit unsettling at first, but I got used
to it quickly enough.
