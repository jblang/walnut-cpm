============================================================

                            The

                          $ R / O

                     R E A D   O N L Y


                     -={ July 1985 }=-


The  monthly  news magazine of the Tampa Bay  Kaypro  User's 
     Group and the DataCOM Network RCP/M Systems Group

============================================================

             Steven L. Sanders - Editor (Sysop)

============================================================
The  DataCOM Network consists of three remote CP/M databases 
with  60 megabyte of files available to members 24 hours  at 
300 or 1200 baud.   An annual fee of $30.00 is required  for 
access,  an  application may be downloaded by calling System 
#1   at (813) 937-3608 at 300/1200/2400 baud or send a  SASE 
along with your request to:

                   TBKUG/DataCOM Network
                      14 Cypress Drive
                   Palm Harbor, FL 33563

NOTE:  Articles and reviews of machines, hardware, software, 
and other peripherals reflect currently advertised prices as 
released  by the distributors and are included here for YOUR 
INFORMATION  ONLY.  The TBKUG/DataCOM Network is  NOT  being 
paid  to  advertise  these products and we  cannot  be  held 
responsible   for  the  price  and/or  performance  of  said 
products.
============================================================

 <<<<< SYSTEM #1 NOW SUPPORTS 300/1200/2400 BAUDRATES >>>>>

               --={ NEWDOS on System #2 }=--

Users  who are familiar with my "NEW" command (a ZCPR3 alias 
that  logs you to drive B,  user0 and runs DIRF.COM)  should 
feel  right at home with the "NEWDOS"  command.   NEWDOS  is 
another ZCPR3 alias that now logs you to drive D,  user2 and 
runs DIRF.COM in the new DOS file section.

The  NEW  command is for those who wish to see  WHATSNEW  in 
CP/M-80  and  other non-DOS operating systems.   The  NEWDOS 
command  is for those who wish to see WHATSNEW in  IBM  (and 
compat) DOS programs.


The NEWDOS command and file area is ONLY on system #2.


         --={ DDraw and ZCPR2/3 on the Kaypro }=--

DDraw  is  a fantastic little graphic doodling  program  for 
video-able   Kaypro  models  written  by  TBKUG  member  Dan 
Griffith of Tampa Florida.   I was having some problems with 
a few of the graphic routines not running quite right on  my 
Kaypro  10  under  BIOSMMR.   BIOSMMR is a ZCPR3  plus  BIOS 
replacement  for  the  Kaypro 10  written  by  TBKUG  member 
Michael  Rubenstein.   BIOSMMR makes use of some intelligent 
routines  to facilitate the handling of characters with  the 
high  bits  set  (ala Wordstar) and  was  blocking  some  of 
DDraw's video calls.

BIOSMMR  users  should issue the  following  command  before 
running DDraw:
                    KSTAT CON=GRAPH

and then after DDraw to put it back the way it was use:

                    KSTAT CON=-GRAPH 

KSTAT  is a special utility supplied with BIOSMMR to  change 
device  assignments  and also to toggle the graphics  filter 
that is built-in to the new BIOS.

For users with John Smith's K10ZCPR3.LBR or the K484ZPR3.LBR 
files, you should issue the following command:

                    A0>GRAF   {transient GRAF.COM}

And finally for users running the K10ZCPR2.LBR files:

                    A0>GRAF   {resident command}

Once  the  appropriate  command has  been  issued  then  all 
further  screen  graphic modes will be enabled  as  designed 
into  DDraw.   I  was  experiencing trouble  with  the  help 
messages  that  appear on the upper left corner of the  CRT.  
They  would  print and then stay on  the  screen,  the  next 
message would just partially over-write the previous message 
causing  a  very messy looking screen.   After  issuing  the 
KSTAT command everything began to work as advertised.

Dan  Griffith,  DDraw's  author  has told me  that  he  will 
release the source for DDraw which is in Turbo Pascal, after 
Micro Cornucopia's Turbo contest is over.   Good luck in the 
contest Dan,  DDraw is definitely a winner and gets my vote!  
Dan  has  also informed me that he is currently  working  on 
adding  printer  support for the Epson RX-80 and Okidata  92 
models.  DDraw currently supports only the Gemini 10 printer 
for it's two different modes of screen to printer dumping.


        --={ Product Review: Courier 2400 Modem }=--

U.S.  Robotics Inc.  of Chicago, Illinois has recently begun 
selling  a  new high-speed capable 300/1200/2400 baud  modem 
called  the Courier.  A good number of the DataCOM  System's 
users  had inquired when I would be supporting 2400 baud and 
the answer is NOW!   I would also like to let others know of 
the features and performance of this fine modem so here they
are.

Courier 2400 Specifications:

Bell 103-, 113-, 212A-compatible, V.22 bis-compatible, or to 
put it simply; 300/1200/2400 baud capable.

Supports  all standard 'AT' commands made popular  by  Hayes 
plus  an  extended set that also includes BUSY,  NO  ANSWER, 
CONNECT 2400, RINGING, and VOICE response codes.

The Courier can check the phone line for (1) dialtone before 
attempting  to  dial,  and (2) the proper mode  of  dialing, 
pulse or touchtone.

Has  9  LED indicators on the front for (1)  HS  High  speed 
(2400bps), (2) AA Auto Answer, (3) CD Carrier Detect, (4) OH 
Off Hook, (5) RD Rec Data, (6) SD Send Data, (7) TR Terminal 
Ready, (8) MR Modem Ready, and (9) AL Analog Loopback Test.

Built-in  speaker  with a really nice and  accessible  side-
mounted  slide volume control.   The Courier also has a  new 
ATM3 command to silence the speaker during dialing,  turn it 
on  after last digit,  and then turn it back off again after 
connection is established with the remote.

Now  the  unique features.   The Courier has  built-in  help 
screens  that  tell  you (1)  what  the  current  S-register 
settings  are,  (2) a summary of the ATD dialing  sequences, 
and (3) a summary of modem commands.  It even has a built-in 
clock  that  can either (1) keep track of the  time  between 
CONNECT  and NO CARRIER or (2) be set for real-time display.  
The  Courier will automatically fallback to 1200 bps if  you 
had  previously dialed out at 2400 bps and connected with  a 
system that only supports 1200 bps as it's highest speed.

The Courier also has the ability to dial numbers entered  as 
alphabetical characters like 1-800-DIAL USR.  Also handy for 
those  who use alternate long distance carriers like MCI  or 
SPRINT  is  the "W"ait command which will wait for a  second 
dial tone and then enter your password or ID#.   The Courier 
can even be used to transmit Morse Code as the dot and  dash 
characters generate the necessary pulses and have the proper 
amount of time delay between them.

The  Courier  is housed in an attractive dark  grey  plastic 
case with a silver front just larger in depth and width than 
the  Hayes  and about the same heighth.   All of the 10  DIP 
switches  are found on the bottom of the unit and you  don't 
need to open the case to change any of them.   Also  located 
next   to   the  DIP  switches  is  a  big  one  that   will 
automatically  reverse  the data in/out lines (2  &  3)  and 
eliminates the need for different DTE/DCE cables for the RS-
232C  interface  to  the  computer.   You  do  not  need  to 
constantly  referrence  the  user's  manual  while   setting 
switches  either.   All  switches are plainly marked with  a 
very  nice  silk screen layout on the bottom  of  the  modem 
(hookah!)

Performance  Report:   I'm  happy  to report  that  all  the 
systems  I've  called supporting 2400 baud (no matter  which 
modem  is  being used) has produced excellent  results  with 
very  low numbers of CRC errors during  transmission.   Some 
area's  phone  networks will have a hard time  handling  the 
higher  speed  and some degradation while be  apparent  when 
using  alternate  carriers but this is normal even  at  1200 
baud.   The  only minor hassle is when you are set for  2400 
baud and connect with a 1200 baud system,  your screen  will 
generate  garbage until you reset to 1200 baud.   The  modem 
falls   back  automatically  but  not  the  software  and/or 
computer.   Ron  Fowler of NightOwl tells me he  is  already 
working  on  a MEX and MexPlus overlay to take advantage  of 
the Courier's new features. 

The  change from 1200 to 2400 is not as drastic as when  you 
go  from 300 to 1200.   But even at only (ha ha)  twice  the 
speed of 1200 baud the savings are considerable on your long 
distance bills.

All features considered and rapidly dropping prices makes me 
believe  this modem is a real winner!   I just saw the  July 
issue of PC World and an outfit called MicroFlash is selling 
new Courier's for $495.  I have also noticed that the prices 
for the Hayes 1200 Smartmodem (which have held at $600 for 2 
years now) are rapidly dropping.   Also the best price for a 
Hayes  2400  I've  seen  by  mail is  $699.   If  you  do  a 
considerable amount of telecomputing then this modem is just 
what you need!  {ed}

                     { Note to Sysops }

Just a quick note to System Operators (Sysops) of RCP/Ms and 
RBBSs.   If  your  system is actively online you qualify  to 
receive a brand new US Robotics Courier 2400 baud modem  for 
only  $350.00 !!   US Robotics is out to corner the  on-line 
market  and  is making their brand new 300/1200/2400  (Hayes 
compatible protocols) modem available very reasonably to the 
Sysop  community.

Needless  to  say I've jumped on this deal and have  already 
contacted US Robotics for my copy.   The #1 Kaypro 10 system 
at (813) 937-3608 now supports 300/1200/2400 baud at time of 
logon. 

Let  me  just  say  that it is nice to see  a  company  that 
realizes the influence that RCP/M systems have on the buying 
marketplace.   If  systems  like DataCOM did not offer  2400 
baud  who would bother to buy a 2400 modem?   My hats off to  
U  S  Robotics  for  making such a  gracious  offer  to  the 
telecomputing community.

This  offer  expires around July 15,  1985 so  don't  delay.  
Sysops of "active" systems should call the sales dept:

                     U S Robotics, Inc.
                    8100 McCormick Blvd
                      Skokie, IL 60076
                       (312) 971-8355


          --={ Plu*Perfect's DateStamper(tm) }=--

              Product Review by Steve Sanders

I can't remember how many times I've said that I wished CP/M 
could time/date stamp it's directory entries like DOS.  Well 
there's  good  news  - it  now  can  thanks  to  Plu*Perfect 
Systems'  program  system  called  DateStamper  (tm).   This 
system  operates  just  fine without a  real-time  clock  by 
keeping  track  of  entries via a  relative  clock  that  is 
incremented each time you access a file.

True  time/date  stamping  can  be  accomplished  with   the 
addition of a real-time clock such as the one built into all 
new Kaypro models.  In addition to the Kaypro factory clock, 
DateStamper  also supports the Legacy,  Holmes,  and Kenmore 
add-on  clock  boards for the Kaypro from a  program  called 
SETUPCLK  which is menu-driven.  I just received the  newest 
CLOCKS.DAT file which works with the SETUPCLK program and it 
now   supports   30   different   built-ins   and   add-ons.  
Ready-to-run  clock  patches are available  for  the  Otrona 
Attache,  Big Board II,  Compupro,  Epson QX-10,  Heath, and 
Xerox 820-I and II machines.  Also patches for the following 
hardware clocks;  Advent,  Mountain,  QT 8080 and Z80, S-100 
with  5832 and 8255,  and CCS 2805.   Plu*Perfect will  also 
help  you customize a special clock patch if you supply them 
with  a  sample program and all available doc on  the  clock 
being used.

DateStamper  is  very easy to install,  just run  a  program 
called  SETUPDS  and  pick your  options.   In  the  default 
configuration,  DateStamper  loads itself into  memory  just 
under  CP/M's CCP area and occupies approximately 1k of RAM.  
DateStamper  may be configured to run above the CCP  if  you 
are  familiar  with MOVCPM and how to create a smaller  CP/M 
system.   DateStamper's buffers may also be relocated to any 
area  in memory you have open which will shrink the size  of 
the  running code below the CCP.   I have it running now  on 
the Kaypro 10 (2.2G model) with BIOSMMR (a ZCPR3-type  super 
BIOS)  and  a  55k TPA.   There are certain  conflicts  with 
memory-hungry programs like EX14 (however EX15 seems to  run 
OK)  and  SMARTKEY which also attempt to load and  run  just 
below  CP/M's  CCP.   This is another good reason to  MOVCPM 
down and run DateStamper above the CCP.

Plu*Perfect  has another program called the BACKGROUNDER(tm) 
which  is  a  keyboard  re-definition  program  similar   to 
SMARTKEY(tm)  which runs in conjunction to DateStamper  with 
no problems.   They also have an enhanced CP/M system called 
CP/M 2.2e that completes their 'custom' operating system and 
gives  you  additional benefits like PUBLIC  files.   PUBLIC 
files  can  be accessed anywhere in your system as  if  they 
were  on the current drive/user area.   CP/M 2.2e has  other 
ZCPR-style  advantages  over standard CP/M  2.2  but  that's 
another month's product review.

Enough  technical mumbo-jumbo,  if you have a 52k or  larger 
TPA area,  you should have no problems. So, WHATZITDO?  Well 
DateStamper keeps track of the time/date a file was created, 
accessed,  or modified and stores this info in a file called 
!!!TIME&.DAT.   This file is initially set-up with the PUTDS 
utility which installs this file as the very first directory 
entry on a given disk (floppy or hard).  If PUTDS encounters 
any  files already occupying the first entry,  said  file(s) 
and  data  are  moved to another entry and  !!!TIME&.DAT  is 
created  and initialized for use.   This file may be  either 
$DIR  (visible)  or $SYS (invisible)  status,  whatever  you 
like.   DATESTAMPing can only occur on a disk that has  been 
installed with PUTDS utility first.

The  DateStamper  package includes a special version  of  SD 
(the directory program) and SWEEP that allows displaying and 
manipulating time-stamped files.   Both SDD and DATSWEEP are 
easily configurable for any terminal's video attributes  via 
the  SETTERM utility and use graphic line and inverse  video 
to  give  you  a  very fancy  looking  display.   The  fancy 
graphics and line drawing routines are not used on the older 
Kaypro II and pre-84 Kaypro 4 models.  A typical SDD display 
looks like this:

Drive A15:  81 files, using 852k (1048K FREE)   +2087-02 Jun
  --file       size      created     accessed    modified--

----------------------{relative clock}----------------------
A15:ALIAS   .COM  4K | +0000-30 May  +2000-02 Jun
A15:CLS     .COM  4K | +0000-30 May  +0002-02 Jun
A15:COPY    .COM  4K | +0000-30 May  +3235-01 Jun
A15:D       .COM  8K |               +2073-02 Jun
------------------{real-time clock running}-----------------
A15:SDD     .COM  8K | 10:43-30 May             14:12-02 Jun
A15:SWEEP   .COM 12k |               17:19-04 Jun
A15:TIME    .COM  4k | 08:35-29 May  19:37-04 Jun
A15:Z3INS   .COM  4k | 09:12-01 Jun  14:01-03 Jun           

(Note:  SDD's actual display is wider than can be reproduced 
in this magazine's 60 column format.)

The above example shows the type of date stamping with  info 
coming from the {relative clock}, and the {real-time clock}. 
The relative clock is advanced everytime a file is  accessed 
by  a  BDOS  (Basic  Disk  Operating  System)  call  and  is 
perfectly  acceptable  for  most  uses.    Without  a  clock 
DATESTAMP will prompt you to enter the current month and day 
each  time  it is initiated after a cold start.   It is  not 
affected by CTRL-C warmboots only cold resets.

SDD  may also be changed to display only the  filenames  and 
sizes,  or filenames,  sizes,  and date last modified, or in 
it's  default  form it produces a complete display like  the 
one  shown  above.   DATSWEEP is patterned after  the  older 
SWEEP  v3.1  written in 'C' and is much larger  then  NSWEEP 
(32k  vs 11k) but does a lot more.   DATSWEEP allows you  to 
change the create,  access,  or modified times and dates and 
also  allows  for  backing up files by  time  and  or  date.  
DATSWEEP  also uses a lot of inverse video and line  drawing 
routines  for  it's fancy looking menu and has a lot of  on-
screen  prompting  and help messages.  The  real-time  clock 
display  in DATSWEEP is constantly updating itself while the 
program is loaded (if you have a clock).   For most ordinary 
file  manipulations I prefer the smaller and  faster  NSWEEP 
or  the ZCPR3 resident CP (copy file) command,  but DATSWEEP 
has it's own special uses as well.

I would highly recommend the DateStamper package to  writers 
or  hackers  who  alter and modify programs on  a  continual 
basis.   Time-stamped files make an easy job of figuring out 
which one was the first one and which was the latest created 
when sifting thru your directories.   The actual stamping of 
files  is done automatically and does not slow  down  normal 
operation  very much.   You will notice slightly longer disk 
saves and access times as DateStamper actual intercepts  all 
BDOS  calls  to decide whether a file is being  accessed  or 
not.  Even an experienced hacker (like myself) will not mind 
the  slightly  longer  disk  I/O  times  involved  when  you 
consider  the advantages to date-stamped files.   This  also 
helps  me  put  off buying a DOS-based machine for  a  while 
longer  as  stamped files was one of the 'frills'  I  really 
wanted to implement.

Now  take all these features of time-stamped files  and  all 
the  special  utilities  included  in the  package  and  ask 
yourself  what is all this worth?   The DateStamper package, 
utilities,  and  documentation is available for only  $39.00 
complete.    The   BACKGROUNDER  (requires  CP/M  2.2e)   is 
available  for $45.00,  and the enhanced CP/M 2.2e  is  only 
$32.00   and   includes  Wordstar  enhancements   as   well.  
Plu*Perfect  also  has  a deal for users  without  real-time 
clocks,  you  can buy an Advent clock board for $79.00  ($10 
off normal price) with an enclosed coupon.

Plu*Perfect  Systems  has  other enhancements  and  products 
available as well,  see their ads in Profiles each month  or 
write to them at:

                    Plu*Perfect Systems
                          Box 1494
                    Idyllwild, CA 92349


            --={ WHATSNEW in Public Domain }=--

                      by Steve Sanders

Warning:   The program NSWP208.COM being distributed on most 
RCP/M  systems  is NOT authorized by Dave Rand  the  author.  
NSWP208  has  been removed from the DataCOM Network  Systems 
and Dave tells me he will retaliate with NSWP209 very soon.

Note:  I cannot believe the amount of new public domain that 
has come through the DataCOM systems in the last 30 days.  I 
do not have enough room here to go into all of them and will 
do my best to highlight only the very best.

EG*.LBR  A fellow by the name of Eric Gans in California  is 
a  very avid Kaypro fanatic and has developed a whole  bunch 
of  highly  useful CP/M utilities.   There's EGBAS.LBR  with 
some  MBASIC utils,  EGPASS.LBR for the Turbo  Pascal  user, 
EGKTEN1.LBR  and  EGUTIL41.LBR are super nice if you have  a 
Kaypro 10 with a hard disk drive.   Eric has written a  very 
nice  back-up  for  the hard disk called BBACK  and  there's 
others   for   ERAsing  and  RENaming  and   changing   user 
assignments,  on and on... There are several other libraries 
as well,  space doesn't permit describing all of them.  Eric 
is  also the author of the popular DR13/14/15  programs  and 
also  the  SRW121/131 programs.   I have taken all of  these 
really fine libraries and put them on TBKUG User Disk  #066, 
and of course they are available for download.

MAIL20A.LBR  is Jim Gronek's dBase mailing database  system.  
This is a comprehensive menu-driven database for maintaining 
names, addresses, and phone numbers.

ERAQ19.LBR  contains a UNIX-style ERAse  command  file.   It 
allows for single-file, wildcard, or mass erasures.  It will 
also  display  the amount of FREE space in 'k' remaining  on 
the logged drive after all erasures.

PCSWP210.LBR   Here's a NEWSWEEP for PC/MS-DOS  users.   Has 
most  all of the standard SWEEP  functions;  Erase,  Rename, 
Tag, Log, Space, etc.  An all around great utility.

IBMMINI.LBR  has  an IBM and compatible  mini-version  modem 
program supporting most standard protocols for transfer  and 
the  COMM1  and COMM2 ports on the IBM (works great on  K16s 
and new 2000 models as well.)

QMODEM85.LBR  has  a bit more  complex  full-featured  modem 
program  for use with 'Qubie and Hayes modem  cards.   Pull-
down  windows  and  lots of other  features.   For  IBMs  or 
compatibles only.

WSFAST24.LBR  has all the files you need to  patch  Wordstar 
v3.30  for faster operation and edit while printing feature.  
The  library  now  contains three .SUB files,  one  has  the 
previous  patches and the other has those plus  the  default 
drive B logging installed.   If you have Wordstar as shipped 
with  the  Kaypros from '83 to late '84 - this is for  you!!  
Just added WSFST24k.SUB into the library,  this submit  file 
will also patch the video of the Kaypro to use 1/2-intensity 
inverse and clear the screen on startup and exit.

LOCK10.LBR  will  allow you to password code .COM  or  ASCII 
type  files  so  they cannot be read or run until  they  are 
un-locked again.  Very nice program and works as advertised.  
If  you  look at the file after encoding  there  is  nothing 
legible there at all.  Run it through UNLOCK with the proper 
password again and it's back to normal.

PAIRX12.LBR  contains  a nice utility for checking  Wordstar 
formatted files and will detect un-balanced pairs of printer 
control  characters.   Really helps you to find the  missing 
^PB before printing a whole page boldfaced.

KPORTS.WQ  is a well-defined breakdown of all the ports used 
by  the Kaypros for all of it's functions.   If you've  been 
hunting  for just the 'right' number to plug into a  program 
to make something do something - check this file out.

K484RCPM.LBR   This is The Poor Man's RCP/M version for  the 
Kaypro  4'84  model and uses the internal modem  and  clock.  
Terry  Carroll is Sysop of The Poor Man's RCP/M in Texas and 
has  put this set of ready-to-run  BYE,  XMODEM,  and  other 
utilities together for the 'occassional' Sysop.  This system 
uses  the newest MBYE36,  XMODEM106,  and CHAT programs  but 
does NOT include a formal message (RBBS) system.   Terry has 
included  a program called NOTE which allows remote  callers 
to  leave  up to a 17-line message which is appended  to  an 
existing  file somewhere on the system.   The Sysop may read 
this  file  later or impliment his  own  RBBS-type  program.  
Terry has included the source code for the patch files which 
are  MBK484-1.AQM  and MBC-K484.AQM for use with MBYE36  and 
also XMK484-1.AQM for use with XMDM-106.   Now all you  need 
to do is put together a message system and add some security 
like ZCPR3 and away yo go weekend Sysops. 

GAMNIV01.LBR  is TBKUG member Dave Oshel's reply to  certain 
commercial  game  vendors.   This is a really  nice  graphic 
gammon  game  for use with most Kaypros capable of  extended 
video addressing like the 10s and most new post '84  models.  
This game pits you (the pathetic human) against the computer 
in  a test of skill and wits.   Your Kaypro screen will show 
you  the  board at all times and if you  know  basic  gammon 
moves and rules you should really enjoy this one.


           --={ SHADES OF WORDSTAR (WINDOWS) }=--

                       by Dick Ezzard

One  breakthrough  for  a writer working on  word  processor 
comes  when  he unshackles himself from the  habit  of  most 
always  working  on the tail end of a writing  project  -- a 
habit  grooved and re-grooved because with a typewriter  (or 
quill pen), the tail end is always the most convenient place 
to work. That's where the blank paper is.

What  does  phonetic writing represent?  The networks of  my 
thoughts  are  multi-colored,  many-dimensioned,  infinitely 
interconnected,  and instantly associated and  re-associated 
according  to  my  own idiosyncratic  learning  experiences. 
Compared to the intricate,  immense, technicolor, 3D, living 
web of human thought,  text extruded by a typewriter or even 
a  word processor is a  poor,  skinny,  little  worm,  -- an 
essentially  linear  artifact.   Like  typewriter  text,   a 
WordStar  file is a string of characters with various  knots 
such  as word spacings,  line endings and paragraph  endings 
tied into the string.

But just as a reference book permits multiple easy access at 
any point for reading, so does the word processor instrument 
facilitate  access  to  text  at  any  point  --at  infinite 
points-- for  writing.  The text string can be cut into  and 
re-arranged  and  new knots can be  tied  effortlessly.  Re-
arrangement and interjection operations in the paper-and-ink 
world  are  cumbersomely involved with note slips  and  note 
cards  and  physical cutting and pasting but they come  easy 
with a word processor. (Deletion is almost too easy!)

The freed-up writer learns the use of place-markers to  jump 
around  and  work  throughout  an entire  WordStar  file  -- 
instead  of  merely adding on to a string's  tail  end.  The 
writing  process  becomes much more like  blocking  out  and 
filling  in.  You  get  to write in the middle  and  at  the 
beginning as well as at the tail end.

The  second breakthrough comes when the writer enlarges  his 
canvas by one more dimension:  Instead of working throughout 
a  single file,  he works all over the system!  Even  though 
WordStar will suck you into one-file operations, there is no 
need to so stultify yourself.  You can easily work in two or 
more  files simultaneously.  You can append notes to the end 
of another file.  You can quickly glance at an outline.  You 
can work all over the disk,  indeed,  you can work all  over 
the  system.  And it doesn't take a new high-cost program to 
do  these  things,  just the application of your  own  human 
technique to available WordStar interfile power.

Avoid file focus!  Try to make it a habit to work in two  or 
more files simultaneously.

This  technique is especially valuable when you are  working 
on some writing of a certain heft,  something more than just 
a simple letter,  some kind of ... Project. One problem with 
computers  is  the  tiny periscope view which forces  us  to 
focus  on  the  current  segment of  text  rather  than  the 
context.  A sweeping panoramic overview is difficult.  Since 
layout of an entire complex project may be difficult to hold 
in the mind's eye,  it is often useful, sometimes essential, 
to have a jotted outline to refer to when you are working on 
a mural-sized piece,  so you can momentarily step back for a 
full  project overview.   Let's say you are  writing  along, 
finish a segment,  and need to glance at the outline of your 
project to see where to go next.  You hit a special function 
key  and  your  outline comes  into  view.  After  browsing, 
finding  out  what you wanted to know,  you hit a couple  of 
keys and the outline goes away again.

Okay,  many  of the newer,  more elaborate  word  processing 
programs  boast  a "windows" feature.  Windowing allows  you 
look at two (or more) files simultaneously,  work in  either 
or both,  yet maintain separate identities for filing on the 
disk.  Typical uses for a window feature are to glance at an 
outline  file when working on text (just what we're  talking 
about  here),  or to jot down something which is not germane 
to  your main effort of the moment by jotting in a  separate 
"Odd Notes" file.

While   WordStar   does  not  have  a   specific   windowing 
capability,  ingenuity  lets  you achieve the  same  logical 
effects with an "almost windows" facility I'll call  "Window 
Shades."  Shades  technique has the metaphorical  effect  of 
(while  working in a main file) pulling down a shade with  a 
message  written on it (such as your outline).  You can look 
at the outline,  then snap the shade back up out of the  way 
and go back to working in your regular window.

Shades starts with WordStar's regular ^Kr command which will 
bring  any other file into the file you are working in.  The 
simple ^Kr file read command,  however,  once executed  does 
not differentiate between the stuff that belongs to the file 
you  are  working in and the material you have brought  over 
from the other file. It may be bothersome to have extraneous 
bits and pieces of the outline "welded" into your text where 
it is hard to strip out again.

The technique part involves thinking ahead,  to be  prepared 
for  what  you will want to do later,  which is  erase!  The 
solution  is to bring the extraneous matter in as  a  marked 
block.  Then  you  can easily see on the screen what is  the 
outline you are referring to and what is your text file. And 
as soon as you have glanced at the outline, you can erase it 
with a ^Ky and go back to what you were doing.  So you  want 
to pull your shade down as a segregated marked block.

To  do that,  you pre-mark a tiny block into which you  read 
the reference file. Use ^Kb, <return>, ^Kk, ^Qb (puts cursor 
into the currently marked block) and then do ^Kr to bring in 
your  reference  material.  It comes in already marked as  a 
block.  When you are done looking at it, ^Ky snaps the shade 
back up by erasing it in the file in which you are currently 
working.  (It still exists for repeated reference in its own 
file  and  you  can  glance at  it  again  anytime  by  just 
repeating the operation.)

Because  the operation is a little complicated,  if you  are 
going  to  do shades a lot,  you will want to  automate  the 
whole  thing by setting up a pre-programmed special function 
key to cascade the WordStar commands involved.  Many systems 
allow for programming function keys.  Another alternative is 
to use a special program such as SmartKey I or II,  ManyKey, 
ProKey, QuikKey, etc., to work in conjunction with WordStar.

The  keystrokes you want to put into a special function  key 
are as follows:

     ^Kb<CR>^Kk^Qb^KrO<CR>

where <CR> stands for the RETURN key or ENTER key.

To  use this special function key properly you have to  pre-
set  your reference outline file in a file called "O"  which 
is  the  file always read in by  this  particular  sequence. 
Properly installed,  when you hit this special function key, 
bang,  in  comes your outline as a marked block,  just  like 
pulling  down  a  shade  in front  of  your  main  file.  As 
mentioned previously,  ^Ky gets rid of it again. And you are 
right where you were before pulling down the shade.

Before  you install a special function key,  you may want to 
give  youself  a walkthrough demonstration,  slow  test  the 
operation "by the numbers." Put something in a file called O 
and  then see how easy it is to bring it in,  glance at  it, 
and erase it.  The technique involved,  your own mental  ju-
jitsu,  is  first to always keep the outline of your current 
project  in  a  file  called  O.  (Different  outlines  from 
different  files  on different disks can be  easily  swapped 
into  your  O file at the start of a writing  session.)  And 
secondly,  because  you  will  just want  to  glance  at  it 
momentarily,  you  bring  the shade down prepared  for  easy 
erasure  by  pre-marking  the  block.  Human  foresight  and 
WordStar tools together yield the desired effect.

You  can  also,  of course,  rig a similar key  to  expedite 
writing  notes  out  to another file.  Let's say  that  your 
application  requires  that  you  keep  a  separate  set  of 
footnotes  or endnotes to each chapter.  As you are  writing 
along,  you write a note or a citation which has to be  sent 
to the endnote file.  You mark the note as a block and hit a 
special   function  key  which  brings  in  the  note  file, 
integrates  the  new  note at the bottom  of  the  notefile, 
writes the whole thing back out and erases the note in  your 
current text file.

In  this  case,  you write something to be included  in  the 
"shade" which gets pulled down and snapped up automatically. 
The technique:


     1)  Write   your note wherever you happen to be in  the 
current text file.

     2)  Do  ^Kb to mark the beginning  of  the  note,  then 
immediately hit <return> to push the note down one line.  Go 
to  the end of your note,  hit <return> and mark ^Kk  (block 
end).  Your  note is now configured as a block with a  blank 
line at the top, and a line ending included at the bottom.

     3)  ^Qb puts the cursor at the top of the note on  that 
blank line.

     4)  Read  in your note file,  ^Kr (it comes "into"  the 
block)  and immediately write it back out again.  That's  Kw 
back to the same filename,  and Y for yes to overwrite  that 
file.

     5)  ^Ky  to  erase the  block in your text  file,  away 
goes the note.

Steps  3,  4,  and  5 can be automated  with  the  following 
programmed special function key:

                ^Qb^KrN<CR>KwN<CR>Y^Ky

which will always bring in a file called N and overwrite out 
to a the file called N.  All you have to remember is to keep 
your current notes file in a file called N.

This  same technique works even if you are not intentionally 
keeping  a  separate  footnote/endnote  file.  Say  you  are 
working  on  a current project and a  thought  occurs  about 
something  off  point  that you'll want to keep  for  future 
reference.  Jot  it down in a block and hit your notes  key. 
Bang,  it's gone from your current text, saved in your notes 
file.

If  you  absolutely  need to look at  two  (or  more)  files 
simultaneously, rig a special function key to print a marked 
block, pull down the shade (like your outline), hit this new 
special  function  key,  then  rip the outline out  of  your 
printer  and  tape it up next to the screen.  ^Ky  gets  the 
shade out of your way on the screen.  A special function key 
which  cascades the commands to accomplish instant  printing 
of a marked block is:

                   ^KwP<CR>Y^KpP<ESC>

You  can see that this command set writes any  marked  block 
(possibly  your  outline pulled down as described) out to  a 
special file called P for printing,  and immediately  prints 
it.  The  "Y"  is in there to answer "Yes" to the  overwrite 
query WordStar will give you if a previous P file exists  on 
your disk.  (And if one does not exist, the single character 
"Y"  will  be entered in your file,  a  relatively  harmless 
effect.)

One  final comment:  Although these commands work just  fine 
with  WordStar  on a regular system,  there is  some  slight 
delay for disk accesses as WordStar writes back and forth to 
files,  perhaps  has to load up part of the overlay file  to 
get  going.  Where  cascaded commands on programmed  special 
function keys really come into their own is when you operate 
WordStar  on a RAM disk,  either a portion of memory  confi-
gured  as  a disk or an add-on piece of  hardware  like  the 
Drive  C sold for the Osborne computers.  With that kind  of 
setup you get snappy shades indeed.  

In  conclusion,  although WordStar has no separate  windows, 
ingenuity will allow most people to get along with pull down 
"shades"  to  glance  at  other  files.   Perhaps  the  most 
important thing to be learned from this is that when working 
with  WordStar you should AVOID FILE FOCUS.  Don't get stuck 
in the habit of working on the tail end of only one file  at 
a time.  There are many techniques that allow you to work in 
several  files simulta-neously,  and if you break typewriter 
tunnel  vision habits,  you can work all over  your  system, 
writing to several files on any disk in any one session.

Last,  in  this hurried note,  here's an update,  this  time 
tested, of the WordStar Ghostbuster special function key:

               ^K0^QE^QS^KB^QX^QD^KK^Q0^K0

This will make the entire screen into a marked block, wiping 
out  the  ghosts as it goes,  and returning  the  cursor  to 
whence it came.  To unmark the block,  either hit ^KH or hit 
the ghostbuster SFK a second time; it works as a toggle. The 
same  idea can be used to delete an entire screenful,  or to 
dump a screenful to the printer. That's all for now.


           --={ Interview: Ward Christensen }=--

                  by Keith Petersen, W8SDZ

The  following  is  an  edited copy  of  an  interview  that 
appeared   in   the  form  of  several  messages   on   Ward 
Christensen's  bulletin board.   It offers some  interesting 
insight into the life and times of our "CP/M Guru".

From: Ward Christensen
Re:   Interview

I'm a negativist,  hater of life, and have a short fuse - it 
doesn't  take  much  to set me off.   That's  why  I'm  into 
computers  - its  almost  like a drug,  letting you  get  so 
completely wrapped up in it, the "world passes you by", i.e. 
I've been known to have a bad headache or stomach ache,  but 
an hour of computing,  and I'm oblivious to it, until I stop 
for something.   It's a totally engrossing way to "pass  the 
time".

What I do for IBM and why I like working there?   Well, very 
long  story,  but you asked for it.   Lets go back to my Sr. 
year  of high school.   I "built" a computer - merely a  10-
stage binary counter with phone-dial input,  and some  wires 
to  handle  carrying from one "flip-flop" to the  next,  and 
lights to show output,  etc.  After pi__ing away 3 semesters 
at a big university not being sure what I wanted to do  with 
my life (still the case, by the way), I dropped out and went 
back  "home" - and skipping a few chapters of the book,  got 
asked  that  since I'd "built" a computer  in  high  school, 
would  I like to learn to program them?   This was in '65 or 
so.  I said "sure", and took a few IBM classes in Milwaukee, 
riding into school on my motorcycle.  After a few months, I 
realized  that I really liked computers - I was  technically 
inclined,  and somewhat a loner, and what better thing could 
there be?   Sure, I liked going on motorcycle rides, but not 
in the winter, etc.

Came  time  to go back to college,  I talked  with  our  IBM 
Systems Engineer,  and asked what kind of schooling I should 
get.  I hoped he wouldn't say "business degree", 'cause that 
turned me off.   No, he said math, sciences, etc.  So I went 
to a small college (now bankrupt,  R.I.P.) and got a Physics 
Major,  Chem  Minor,  and hit "deans list" 6 semesters in  a 
row,  then  took ONE job interview,  IBM.   I figured simply 
that I could either work for someone who USES computers,  or 
someone who MAKES them,  and the decision sounded easy if  I 
wanted to be "where he action is".

However,  I  wasn't smart enough to go looking for the  best 
job  in  IBM,  instead I just interviewed the local  office, 
which  was looking for a systems engineer  - the  "technical 
side  of  sales",  i.e.  doing  configurations,  performance 
planning, helping solve bugs, etc.

I wound up in the Hammond IN branch,  and have stuck with it 
since.

If I had it to do over again, I'd look for a job in research 
or something more technically involved.   Matter of fact, it 
came  as  quite  a shock to find the IBM  office  back  then 
didn't even have a computer in it!   Here I was, working for 
a  computer mfgr,  but not working with a computer!   I  was 
only able to work with the customer's machines!

So,  I  guess that got me interested in a home computer.   I 
remember being interested in the very early 70's, and bought 
a Data General Nova instruction manual,  got literature from 
TI on their minicomputers, etc.  I learned about the 8008 in 
Jan '74,  and taught myself TTL that summer,  and bought  an 
Altair, the "first popular" computer kit, in early '75.

SO,  long answer - what do I do for IBM?  Well, I'm still an 
SE,  but  have  moved up a few  jobs  - trainee,  assistant, 
associate,  se,  and now advisory.  We are just now starting 
to have PC's in the offices.

As  to my view of "IBM vs my personal contributions" - well, 
I  guess  that after writing a letter to IBM trying  to  get 
them to come out with a personal computer,  and receiving  a 
reply "we don't think there is a market for them", I kind of 
"went off on my own".   For conflict of interest reasons,  I 
decided  that  I'd  give away anything I  did,  rather  than 
trying  to  sell it.   This is a  very  "conscientious",  or 
whatever  word fits - thing for me to do - people  say  I've 
passed up millions $ in the many things I pioneered.  But, I 
wasn't  the entrepreneur type,  and IBM paid well enough  to 
finance my hobby.  I'm sure it helped my IBM related career, 
i.e. outside recognition, etc.

I  guess  I don't remember the Ted Nelson thing fighting  to 
get  the  "world up in arms against  the  computer  giants".  
I've  seen nothing wrong with "computer giants" - thought  I 
admit  that  when a company gets larger than  some  critical 
mass, it gets a "momentum" disproportionate to its technical 
abilities  - allowing it to sometimes come out with products 
that would have failed if done by other companies  - perhaps 
the  PC  Jr is such - having recently had new life  breathed 
into  it  ala  new  keyboard,  and  significant  price  cuts 
(temporary tho they were).

The  kind of practical innovation that has come out  of  IBM 
has been VERY fascinating.  I used to like to talk to fellow 
computer  hobbyists  about the printer we had  that  printed 
about  as  fast as you could pull paper out of  a  box;  and 
about the 2.5 BILLION byte "boxes" of disk storage, etc.

I  always kept my hobby separate from my job - I didn't  see 
how I could enjoy the hobby if it became the same as my job, 
but as of Jan 1,  I knuckled under to that,  too, and am now 
the  workstation  specialist (means PC's and terminals)  for 
one  of the branch offices in downtown  Chicago.   (which  I 
really  hate  - being a small town "boy",  the big  city  is 
really  a pain!)  But,  having bought a house at a time that 
interest rates were low,  its like having a rich uncle, what 
with what has happened to interest rates.   It tends to keep 
me rooted in one spot.  (I always was very conservative).

Old Q's:  "you were 29 when you got into this,  right?   And 
what  background  did  you have to read  TTL  tech  material 
anyway?"  Yes,  29.   And for technical background,  I had a 
degree in physics, and even from a liberal arts college, you 
DO  learn some basic electronics.   Also of course  remember 
I'd built this computer in high school, but still I was most 
certainly not one of the "jocks".   TTL just came natural to 
me,  I guess because its so mathematical in nature.   Its as 
"simple as" 0 volts being a "false" value, and 5 volts being 
a  "true" value,  and voila (or is it viola?) you  could  do 
things like and,  or,  exclusive or, not, not-and, etc - but 
instead of numbers on a sheet of paper, they were electrical 
signals.

History  on the micro?   When did it go from switches on the 
front panel?   I guess '76 or so - or whenever the apple ONE 
came out,  and the SOL, which was a small machine based upon 
similar  technology to the original Altair that is  credited 
with  starting  it all.   But then again,  my  current  CP/M 
machine,  with 256K,  3 floppies, and 8M of hard disk, still 
has  front  panel switches,  and LIGHTS.   I sure  miss  the 
LIGHTS  on  my PC - you can tell what  its  doing,  how  its 
doing, etc.

When  did  I first discover I could "play" with a  computer?  
Well,  I  guess that high school project was  one.   It  was 
purely  a  technical challenge,  and learning tool - had  no 
practical application.   Actually,  I was motivated to spend 
the $$ to build it knowing I'd win first prize (I suppose  I 
could be a bit less egotistical and say "hoped.."),  of $75.  
Sure enough I won, but got a hand-shake and 'gee, sorry - we 
never got out to get funds for a bond' story.  Owell.

Then,  within  my  first  year working  at  IBM,  the  first 
customer  I worked with was sufficiently impressed to try to 
hire me away, and a whopping 40% pay hike over what IBM paid 
- but  I figured I'd be better in the long run to stay  with 
IBM.  Right!  That company doesn't exist any more!.

What  "clicked" to make me excited about the fact of  having 
my own computer?  Well,  I don't remember, sorry.  I guess I 
just  never found anything technically  challenging  enough, 
and  realized  that a computer would be a tool of  unlimited 
variability that could do what I wanted it to do.  I guess I 
was  just a computer junkie,  even though at the time  there 
weren't  home  machines.  I  remember  this  customer  (that 
offered  me the job) wasn't allowed to trust me with a  key, 
but  they approved me sleeping over Friday night so I  could 
use  the  computer Saturday.  As a  result,  they  got  some 
results  they certainly didn't get out of their own people - 
because  I  was willing to spend so much  time  at  it.   It 
really IS a "habit" - like a drug, etc.  Why else would I be 
- as  I am now - typing at after midnight,  having to get up 
shortly after 6:00 tomorrow,  etc.  It is just so completely 
unlimiting,  I guess.   Today, I was stuck in a VERY crowded 
elevator  for  about  6 minutes.  Two  of  the  people  were 
claustrophobic.  I  say this because somehow my interest  in 
computers  is  as inexplicable as the claustrophobia  is  to 
them - it is just there.   I think because I was a loner,  I 
never  got  interested in the more "humanitarian"  things  - 
never got interested in "partying",  owning a boat,  etc.  I 
HATE  driving - being very law abiding,  it is unbearable to 
be placed in a situation of watching everyone else break the 
law,  from failing to signal,  to parking in two places,  to 
speeding, - sitting home at my computer is perhaps a sign of 
"withdrawal".  I did fall in love once, 1977, er, March, ah, 
March 2nd,  ah,  8:30 PM (not that it made a big deal to me, 
heh heh).    Believe it or not "my disk drives rusted up" as 
a  result of that - but sadly for the wrong reason  -massive 
depression  because she was a "career worman",  and  I  just 
didn't  fit  in her life.   It did open my eyes to a lot  of 
life,  but also made me sort of "give up" - I look at it  as 
both the best and the worst thing that ever happened to me.

What  did  I  do  in '55 w/hen Chuck Berry  and  Bill  Haley 
revolutionized music? They did?  Was I building radios?  No, 
I   didn't  have  the  ambition  to  learn   anything   that 
complicated.   I just mixed chemicals together,  and blew up 
the back yard, I guess.  (take one part gunpowder, bury in 1 
foot  deep hole;  bury a wire with fine wire wrapped  around 
match  head  in it,  cover with dirt,  go in house and  plug 
other end in socket,  go back out and apologize to neighbors 
cookout for sprinkling dirt on them..

"Get  a  job" was the first 45 I bought,  and I  didn't  buy 
many.   Came  from "college educated" family,  with sort  of 
"snobbish" mother - when we got a TV,  unlike everyone  else 
who  put an antenna on the roof,  she insisted it go in  the 
attic  so no one would know we had time for such  frivolity.  
I  think  they  sort of turned me  into  a  loner,  too,  by 
steering  me toward the "children of their friends",  rather 
than  the local neighborhood kids,  who were mostly  factory 
workers'  kids  (not all,  one friend's father  was  doctor, 
etc).

I  guess  it was HeathKit that got me into  electronics  - I 
built  their  16-in-one transistor experimentors kit  my  jr 
year  of  High School;  Oh,  also I think  I  subscribed  to 
Popular Electronics.   Later to Radio Electronics.   You are 
bound  to  pick  up some things from  that,  by  osmosis  if 
nothing  else.   I  was even known to buy old used  computer 
boards  for two bucks fifty,  and literally  blow-torch  the 
chips off of them to make my projects.

Ward  was asked why he was using an IBM computer now and  he 
replied,  "One day I decided I wanted to use a slow computer 
with a lousy keyboard."


                   --={ Editor Speak }=--

I'm not even going to say a thing,  Ward said it all.

Until next month sportsfans (and computer orphans) ...






                       Steve Sanders
