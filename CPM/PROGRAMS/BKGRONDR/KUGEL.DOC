The following is the text of a review of BackGrounder II that I wrote for
the KUGEL, the newsletter of the Boston Computer Society Kaypro Users Group.

                       ------------------------------


                              Backgrounder II

                                  Jay Sage



     I would like to describe here what I think is the most impressive andç
exciting piece of software ever introduced for CP/M (Z80-compatible)ç
computers -- Backgrounder II from Plu*Perfect Systems.  This program offersç
what one might perhaps expect to find on a 16-bit computer with megabytes ofç
memory but would dismiss as utterly impossible on a little 8-bit computerç
with only 64 kilobytes of memory.  Kaypro owners might remember an earlierç
product called Backgrounder, but this version -- which runs on any CP/M2.2ç
computer, not just Kaypros -- goes way beyond the original.

     Let's learn about it with an example.  It's morning, and you sit downç
at your computer to start work on a letter.  After turning on the computer,ç
you get the familiar CP/M prompt "A>".  To invoke BGii you enter the commandç
"LOADBG", initiating a process in which BGii automatically configures itselfç
for your system and installs itself, even running a set of startup commandsç
of your choice.  The BG system prompt now appears:

		09:12 A0:BASE>

     There are two striking differences.  First, BGii offers alternativeç
named directories for the drive and user number areas in CP/M.  Part of yourç
startup command sequence involved the automatic loading of a named directoryç
file, so BGii now knows that you want to associate the name BASE with driveç
A user 0, the name TEXT with drive B user 0, and so on.

     The second thing you notice about the system prompt is that the currentç
time of day appears in it.  You are also using Plu*Perfect Systems superbç
DateStamper (DS) program, which automatically maintains time/date stamps onç
your files (and not just 'last update' as in MS-DOS but creation time, lastç
modification time, and last access time).  BGii works hand-in-hand with DS,ç
so it always knows the date and time.

     Now you want to go to your TEXT directory and run your wordprocessor. ç
You used to enter the command "B:" first, and then "A:WS" to get WordStarç
running.  With BGii you can enter the single command line:

		TEXT:;WS

First of all, with BGii you can move to B0:, the text directory, by nameç
("B:", of course, would work also).  Second, you can put many commands inç
the same line, so you don't have to wait for one to finish before you canç
enter the next.  Just separate them by semicolons.  Third, you didn't haveç
to tell the computer that WordStar is on the A drive.  With BGii theç
computer is smart enough to find your programs for you, automatically.  Youç
have set up a command search path that includes A0: (drive A user 0), soç
when BGii didn't find WS.COM on drive B user 0, it automatically looked forç
it (and found it) in A0:.

     Once inside WordStar you begin to work on the letter.  You enter theç
address header at the top and position yourself to where the date goes. ç
You've been working very hard and have lost track of the date, but itç
doesn't matter.  You just hit the BGii function key sequence "\D" (backslashç
then 'D') and the date appears, just as if you had typed it.  The BGiiç
function key facility, coupled with DateStamper, got the date from theç
system clock and put it into the text.

     Now, well into the text of the letter, you are writing that you areç
buying a certain item from Japan at a cost of 83,650 yen, which at theç
present exchange rate of 163 yen to the dollar will cost....let's see, howç
much is that in dollars?  Your little pocket calculator must be around hereç
somewhere.  Oh well, no matter.  You press the function key sequence "\C"ç
and the BGii calculator pops up on the screen.  You enter "83650/163=" andç
there is the answer.  You don't even bother writing it down; you just exitç
from the BGii calculator by pressing "Q".  Now you are back in WordStar,ç
with the screen just as you left it.  You press the function key sequenceç
"\A" (A for answer) and what appears in the text but "513.19018404" (I justç
used BGii while writing this article!), the answer to your calculation.  Youç
don't need all those figures, so you backspace leaving just "513.19".  Thatç
was handy!

     A little farther into the letter, you're getting into some seriousç
financial discussion and need data from the spreadsheet you developed lastç
night.  Before you had BGii you would have had to exit from the wordç
processor, load and run the spreadsheet program, write down the data, exitç
from the spreadsheet, rerun the wordprocessor, find your place in theç
document, and put in the information.  But with BGii that is a thing of theç
past.  Now you press the function key sequence "\S" (for swap), and taskç
swapping begins.  After a short delay, a new system prompt appears:

		09:52 b0:text>

     Your word processing task has been suspended, and from the new systemç
prompt you can run any other program you wish.  The prompt appears in lowerç
case to remind you that you are in Backgrounder's lower task, the main taskç
being called the upper task.  First you change to the DATA directory, whereç
you keep all your spread sheets, by entering the command "DATA:".  Now theç
prompt is:

		09:53 b1:data>

     While you were working late last night on the spreadsheet, you createdç
several versions of the data file.  You were sure you would remember whichç
was the last one, but that was yesterday.  Now you're not so sure. ç
Fortunately you have DateStamper, and you run its directory program SDD,ç
which lists the files with the times/dates of creation, modification, andç
access.  You quickly identify the most recent version, invoke your spreadç
sheet program, and read in the data file.

     To make the operation of the spread sheet program easier, weeks ago youç
created a special set of 'keystroke macros' using BGii's built-inç
capability.  And you really appreciate the way BGii has automatically loadedç
those key definitions as it loaded the spread sheet program.  Even when youç
swap tasks, BGii makes sure the right set of 'macros' is always there withç
each task.  It is also very easy to add new definitions while you areç
running a program.

     You are now adjusting the data on the screen to get it into the rightç
format for inclusion in the letter.  Unfortunately, there is one spreadç
sheet function you always forget how to use, and it is not coveredç
adequately by the built-in help information.  The last time this happenedç
and you finally figured out what to do, you added an information screen toç
the custom help file you have been preparing on your spread sheet program. ç
Wouldn't it be handy if you could look at it now, without leaving the spreadç
sheet?  Of course, with BGii you can!   You press the BGii suspend keyç
(control-caret), and still another prompt appears:

		10:03 b0:text}

You are now in background mode, 'behind' the lower task (the curly braceç
tells you that this is background mode, and the lower case text indicatesç
the lower task).  From this prompt you cannot run COM-file programs, butç
many powerful BGii background functions are at your disposal.

     You enter the command "HELP SPRSHEET", and your help file appears onç
the screen.  (By the way, BGii found it automatically on drive A user 10,ç
the designated help directory.)  It offers a menu of topics, and you quicklyç
identify the one with the information you need.  After pressing the keyç
corresponding to that menu choice, the screen appears.  Your memoryç
refreshed, you exit the help system with control-c and press the suspend keyç
again to reactivate the spread sheet.  Its screen reappears on your terminalç
just as you had left it.

     The spread-sheet editing process is a little involved (no wonder youç
have a hard time remembering it), and you are going to have to repeat anç
operation quite a few times.  Before you do it the first time, you pressç
your function key sequence "\R".  The terminal bell rings twice, remindingç
you that the BGii key-recording mode has been initiated.  You go through theç
process the first time and then enter the sequence "\R" again.  A promptç
appears on the screen asking which key you want that series of key strokesç
to be assigned to.  You enter "\1", and from now on when you press "\1" theç
entire sequence you entered before will be executed again.  Amazing!  In noç
time you have the spread sheet screen just the way you want it.  Now if youç
could just get it into the letter in the word processor.  Would BGii makeç
you do that manually?  Of course not!

     After pressing the suspend key again to get the background prompt, youç
enter the command "SCREEN TEXT:DATA.DOC".  Your whole spread sheet screen isç
saved in a file called DATA.DOC in the directory TEXT: (B0:) where your wordç
processing files are.  The background prompt reappears.  Just in case youç
need to make any changes in the spread sheet, you decide to leave that taskç
active.  From the background prompt, you enter the command "SWAP" to returnç
to WordStar.  Its screen reappears just as you left it.  You read in theç
DATA.DOC file and continue your work.  (I just described moving an entireç
screen between tasks.  With BGii it is also possible, using the CUT andç
PASTE commands, to move designated sections of screens.  Those 'CUT'ç
sections can even be assigned to function keys and made part of permanentç
'keystroke macro' files.)

     Suddenly you have a flash of inspiration about another project you areç
working on, and you'd like to make a couple of notes before the ideasç
evaporate from your mind.  You are tempted to scribble them down on a scrapç
of paper, but you know how those little scraps tend to get lost.  So againç
you call on BGii.  A press of function key sequence "\J" invokes the JOTç
function.  A little notepad file appears on the screen.  To enter the timeç
and date of your brainstorm, you type "\T\D".  The line "11:35:25 Januaryç
19, 1987" (I just did it) appears in the text.  You continue by typing inç
the idea, close the file, and return to your main task.

     Finally the letter is done.  You send it off to the printer using theç
BGii print spooling capability.  While the file is printing (this is theç
only case in which BGii performs true concurrent multitasking -- two tasksç
running apparently simultaneously), you return to the spread sheet to doç
some final cleanup.  You spool the spread sheet output to the printer (youç
don't have to wait for the other file to be finished), exit from the spreadç
sheet program, and begin some other tasks (consult your jotpad for all thoseç
great ideas you had earlier).

     So much for this example.  There are thousands more.  One of the thingsç
that impressed me so much with Backgrounder during its development (I servedç
as a test site) is that there is no end to the possibilities is offers.  Newç
uses were constantly springing to mind, uses that had not occurred even toç
the author, Bridger Mitchell, when he conceived the program.

     The hardest thing I have found about using Backgrounder is breaking oldç
habits.  I am so used to the limitations of the old system that I stillç
often forget to take advantage of BGii capabilities.  I close files andç
leave a program before I remember that this is no longer necessary.  I enterç
lengthy command sequences repeatedly, forgetting that the BGii keystrokeç
macro capability is so accessible and easy to use.

     Now for the technical and financial details.  What do you need to runç
BGii?  If you have a Kaypro CP/M computer, you are all set and need not readç
the next few paragraphs except out of curiousity; BGii is fully functionalç
on the Kaypro machines.  For people with other computers, here are theç
requirements.

     First, your computer must use a Zilog Z80-compatible chip (thisç
includes the National NSC800 and the Hitachi HD64180 but not the Intel 8080ç
and 8085 chips).  Your disk operating system must be Digital Research'sç
standard version 2.2 BDOS (BGii will not work with CP/M-Plus) or the ZRDOSç
replacement disk operating system from Echelon, versions 1.1, 1.2, 1.3, orç
1.7.  A few, but not all, of the common BDOS patches are acceptable.

     Second, your terminal must, at the least, support direct cursorç
addressing, clear-screen, clear-to-end-of-line, and clear-to-end-of-screenç
functions.  Some of the features of BGii (the SCREEN, JOT, CUT, and PASTEç
functions described above, among others) require a special screen driverç
that demands additional terminal features.  Such drivers are alreadyç
available for Kaypro computers and Heath/Zenith model 19 (and compatible)ç
terminals.  Drivers for other popular terminals, such as those fromç
Televideo and Wyse, are nearly ready for release now.  But please note: BGiiç
is an extremely powerful and useful program even without the functions thatç
require a screen driver.  I use an odd-ball terminal and am using BGiiç
without a screen driver.  As I'm sure you can tell, I love it anyway!

     BGii does use up some memory and disk space.  Obviously it can't do allç
the things it does without availing itself of some system resources.  Theç
memory requirement is 4.75K, 2K of which is the standard command processor. ç
If some program of yours won't run with the reduced memory, however, you canç
always issue the "BG OFF" command.  This instantly restores your system toç
its normal state.  You can run your memory-hungry program and then reload BGç
with "LOADBG".

     BGii is completely compatible with ZCPR3 systems.  (That is the subjectç
for another whole KUGEL article.  I am very active in the development of theç
ZCPR3 advanced operating system replacement for CP/M 2.2 and made sure thatç
BGii works with it flawlessly.  In fact, the BGii command processor is evenç
more advanced than the standard one in ZCPR3.)  In a ZCPR3 system, BGii canç
reuse space normally allocated to ZCPR3 buffers that are no longer needed byç
ZCPR3.  The memory requirement can then be reduced to 2.75K or even 0.75K.

     BGii is a virtual memory system, frequently swapping data betweenç
system memory and disk memory.  For full-featured operation, BGii requires aç
swap file of about 100K.  This swap file should be kept on a harddisk orç
ramdisk, so that swapping will take place quickly.  BGii will run on aç
floppy-disk system, but operation will be much slower.  Plu*Perfect Systemsç
does not recommend BGii for floppy-only systems, but if you make use only ofç
the background mode and not task switching, operation on a floppy system isç
often acceptable.

     In any case, you don't have to leave to chance any questions about howç
well BGii will run on your system.  There is a demo version that isç
available free of charge.  It is identical to the full-fledged versionç
except that you will be restricted to drive A.  If BGii works properly onç
your system, there is no doubt that you will eagerly spend the money for theç
unfettered version.  You can get the demo version from Compuserve and fromç
other remote access computer systems (mine can be reached at 617-965-7259,ç
password "DDT").  You can also send me a diskette or diskettes (with totalç
capacity for at least 220K).  These diskettes should be formatted, sent in aç
suitable, reusable mailer, and accompanied by return postage and a return-address sticker.  They will then be returned to you with the demo version ofç
the program.  We can handle almost all 5" formats (but not odd-ball hard-sectored formats) and standard 8" formats, so I will not try to list themç
here.

     This brings us neatly to the money question.  BGii costs only $75 andç
comes with a neat manual in an IBM-style three-ring binder.  Shipping &ç
handling charges are typically $4 per order (no matter how many items in theç
order), and, if you are in the same state as the dealer, that state's salesç
tax must be added.

     Currently, BGii is available from four sources.  My favorite, notç
surprisingly, is Sage Microsystems East.  The similarity in name is noç
accident; this is my wife's company (you don't think I would let her pass upç
offering a great program like BGii).  See her ad in this issue of the KUGELç
for more information.  A second source is NAOG, Bruce Morgen's Northç
American One-Eighty Group, an organization supporting computers based on theç
sensational Hitachi HD64180 8-bit microprocessor with on-chip advancedç
memory management capability.  Bruce also helped in the BGii testing, and heç
can be reached in Warminster, PA, at 215-443-9031.  Third is the Lilliputeç
Z-Node in Chicago (312-649-1730, modem only).  Finally, you can get BGiiç
directly from its developer, Plu*Perfect Systems (P.O. Box 1494, Idyllwild,ç
CA 92349).

     DateStamper is $49.  It will work on almost any CP/M-type computer,ç
including those with Intel 8080 or 8085 microprocessors.  You don't evenç
have to have a real-time clock in your computer.  In that case you will haveç
to enter the date manually each day when DateStamper is loaded, and the timeç
stamps will not be in wall-clock time but in index time.  The index willç
start at +0000 and increase by 1 for each disk access.  You won't be able toç
tell the actual time a file was created or accessed, but you will be able toç
tell the order in which they were created or accessed.

----------

Jay Sage is well known to those who attend BOSKUG meetings, at which he hasç
presented several programs and conducted training sessions in ZCPR3,ç
telecommunications, and Z80 assembly-language programming.  In addition, heç
is the Director of the BCS CP/M Computers Group, sysop of Z-Node #3, andç
software librarian of ZSIG, the SIG/M of the ZCPR3 world.  In his spare timeç
he enjoys playing with computers!
                                                                