NOTE:  Kay*Fog  RBBS  #2  in San Francisco is devoted  to  conferencing  and 
recently  held a Wordstar Forum.  One of the topics discussed was the use of 
strings  for Wordstar (made with the use of a keyboard redefinition  program 
such as Xtrakey--the best such program,  in my opinion--Smartkey,  etc.) The 
following  messages  devoted to this subject have been excerpted  from  this 
board,  which  can be reached at 415-826-2131.  Most of these messages  were 
written by the Assistant Sysop,  Dick Ezzard, author of the famous "Wordstar 
Shades" article mentioned in PROFILES.
                                                  Howard Schwartz

Msg#:   60 *WORDSTAR FORUM*
08/19/85 05:39:33 (Read 34 Times)
From: ASSISTANT SYSOP
To: WORDSTAR UWERS
Subj: KEYS TO WORDSTAR- INTRO
Introduction:  Keys to WordStar This message begins the "Keys to WordStar"
series which will  appear in this conference.  It concerns the use of
programmed  special function keys to cascade WordStar commands at the touch  of
a single key.  

After a couple of introductory messages, each key definition will  be posted in
a message of its own, along with an explanation of  its use, and a discussion
of suitable applications.  The reason  for posting each key in its own message
is to help test the TBBS  system being implemented on KAY*FOG #2 system, which
testing  requres a lot of messages.  Also as a bonus of putting this  material
in many messages, key definitions may be accessed one by  one as required, and
each may be skipped over by the discerning  WordStar enthusiast who already
knows about many of these.  

Thus, one way to exploit this series of messages is to use TBBS's  scan
facilities to look at the message titles and then read/  capture only those
messages which look like they might contain  something of real usefulness. 
Another way, of course, is to  capture the whole schmear with a Read continuous
and throw out  what doesn't appeal.  

Readers are encouraged to submit their own favorite WordStar  special function
keys to this conference.  Don't be bashful.   Even the most arcane and
specialized set of WordStar commands may  save someone else engaged in a
similar task a lot of time and  grief.  For example, if you have put together a
special function  key that aids formatted data entry or data file editing,
although  not of interest to most people, it will be a lifesaver to someone  
doing the same kind of thing.  A script-writer may deal in  specialized margin
settings that have utility only to other  script-writers.  Send 'em in.  


Msg#:   61 *WORDSTAR FORUM*
08/19/85 05:40:42 (Read 35 Times)
From: ASSISTANT SYSOP
To: WORDSTAR USERS
Subj: KEYS TO WORDSTAR - NOTATION
Notation Used in Describing Keys

The notation used for defining a programmed special function key  in this seris
of messages should be familiar to most computer  users.  The circumflex ^
symbol is used to indicate that the 
<CONTROL> or <CTRL> held down at the keyboard at the same time  another key is
pressed.  

"^K" would mean:  Hold down the <CTRL> key and hit the "K" key.

Leaving off the quotes from now on, ^Kr would mean:  Hold down  the <CTRL> key
and hit the K key, followed by a stroke of the r  key.  

The ESCAPE or ESC key is notated by <ESC>.  Normally you do _not_  hold down
the ESCAPE key when hitting another key.  

<ESC>U would mean:  Hit the ESC key, then hit the U key.  

The RETURN or CARRIAGE RETURN or ENTER key is notated by <CR>.  


Msg#:   62 *WORDSTAR FORUM*
08/19/85 05:41:34 (Read 36 Times)
From: ASSISTANT SYSOP
To: WORDSTAR USERS
Subj: KEYS TO WORDSTAR - LIST
WordStar Function Keys Series, Outline/ List

The following list is presented as an experiment in putting short  lines into
the TBBS system, to see how the format may be  maintained even though user's
screen width will be defined in  various ways.   KEYS TO WORDSTAR  
Introduction:  Keys to WordStar Macros:  Cascading WordStar Commands Ramdisks: 
Speed and Silence Text Entry Keys:   TE: Reverse Two Transposed Letters TE:
Fetch Special Ruler Lines TE: Delete Word to Left Editing Keys:   Traversing a
File   EDIT, TR:  Jump Cursor to Next Paragraph EDIT, TR:  Jump n Lines EDIT,
TR:  Jump n Paragraphs Massive Deletions EDIT, DL:  Delete from Cursor to
Beginning of File EDIT, DL:  Delete from Cursor to End of File EDIT, DL: 
Delete to End of Paragraph EDIT, DL:  Delete to Beginning of Paragraph 
Rearranging Text:   EDIT, RT:  Mark Current Sentence as Block EDIT, RT:  Mark
Current Paragraph as Block EDIT, RT:  Move Cursor to Keyword EDIT, RT:  Move
Block to Cursor, Swap EDIT, RT:  Move Line to End of File EDIT, RT:  Move Block
to End of File EDIT, RT:  Install Several Sorting Bins EDIT, RT:  Move Block to
Bin n Indexing a File:   EDIT, DX:  Copy Line to End of File EDIT, DX:  Copy
Word or Phrase to End of File EDIT, DX:  Copy Block to Top of File Multiple
File Editing:   EDIT, OF:  View Another File EDIT, OF:  Add a Note to Another
File Other Editing Aids:   EDIT, BL:  Tag Marked Block for Later Remarking 
EDIT, BL:  Remark a Tagged Block Miscellaneous Keys:   MISC:  Remove Ghost
Lines from Screen MISC:  Print Marked Block MISC:  Remove Carriage Returns NOT
Followed by Linefeeds Formatting Keys:   FRMT:  Reform Current Paragraph FRMT: 
Underline a Single Word

END OF EXPERIMENTAL LIST of WordStar Keys


Msg#:   63 *WORDSTAR FORUM*
08/19/85 05:44:26 (Read 33 Times)
From: ASSISTANT SYSKP
To: WORDSTAR USERS
Subj: CASCADING WORDSTAR COMMANDS
Macros: Cascading WordStar Commands

Many computer systems allow you to automate strings of WordStar  commands by
programming "special function keys." Then the touch  of a single key will
cascade several (or more) WordStar commands  which add up to the performance of
some desirable process which  would be slow and cumbersome to do if you had to
enter each  command separately. The WordStar command buffer is constituted so  
that it will receive and store a number of commands faster than  any human can
type. Also, carefully pre-arranged strings of  commands do away with the
possibility of typographical error when  keying in a complex set of functions.
Human mistakes with complex  WordStar commands can result in undesirable damage
to an  important file. 

The addition of pre-programmed special functions to the existing  power of
WordStar make it a very powerful text tool indeed.  Although the number of
potential ombinatory special functions is  theoretically some kind of
astronomical number, the individual  user will probably come up with a small
set of favorites that he  knows well and uses often. I find it convenient to
keep such  tools in "sets" which are appropriate to given kinds of  activities.
You can have one set for use during high speed text  entry, another set for
editing existing text. I especially find  useful a set I use for re-arranging
mishmash text files. 

If your computer does not come with pre-packaged key programming  facilities,
quite possibly you can achieve the same effects by  the use of a special
program. Many of these keyboard enhancers  are available today, for almost
every kind of computer, every  operating system. To mention a few: SmartKey I,
SmartKey II,  ProKey, ManyKey, QuikKey, SuperKey. Put one of those babies to  
work with WordStar and supercharge your text processing. 



Msg#:   65 *WORDSTAR FORUM*
08/19/85 05:46:37 (Read 29 Times)
From: ASSISTANT SYSOP
To: WORDSTAR USERS
Subj: TEXT ENTRY TYPOS
Reverse Two Transposed Letters:  

^Kk^S^Kb^S^Kv^Kh

This will reverse two letters entered in transposed fashion, a  common
typographical mistake.  For example, if you type the  sequence teh, you can use
this key to correct it to "the."  It  may be useful during high speed text
entry if this is one of your  common mistakes.  However, it is probably more
trouble than it is  worth since it requires that you position the cursor
carefully  just to the right of the two transposed letters.  

The quickest ways to correct errors detected during text entry:  

If you are still in the word where the error occurred, use your  deleting
backspace to erase back to where the error is and retype  the error.  

If the error is several words back on the same line, use ^A to  jump back to
the beginning of the word which contains the error,  then retype the whole word
(unless it is a monster like Brzeniski  or something) inserting it in front of
the error, then use ^T to  delete the word with the error.  

If you notice an error back further on your screen, let it go  till you go
through on your proof read.  Especially if you are  going to do a spell check
anyway.  


Msg#:   66 *WORDSTAR FORUM*
08/19/85 05:47:35 (Read 29 Times)
From: ASSISTANT SYSOP
To: WORDSTAR USERS
Subj: FETCH SPECIAL RULER LINES
Fetch Special Ruler Lines

^Qs^Kb<CR>^KK^Qb^KrR<CR>

This baby marks a tiny emptyblock, then reads in a file called R  which is
where you keep formatting stuff like special ruler  lines.  This is very useful
to people who have to adjust their  tabs and margin settings often, like
script-writers and people  who make up highly formatted tables and lists.  Also
useful if  you edit directly on data base files which have to line up.  

Your collection of ruler lines comes in as a marked block.  Place  the cursor
on the example ruler line of your choice and do ^Of to  reset your margins and
tabs.  Then do ^Ky to erase the ruler  lines out of your current file until you
need 'em again.  

Thanks to John English on CompuServe for this one.  


Msg#:   67 *WORDSTAR FORUM*
08/19/85 05:48:24 (Read 32 Times)
From: ASSISTANT SYSOP
To: WORDSTAR USERS
Subj: DELETE WORD LEFT
Delete Word to Left

^A^T

Another error corrector for use during text entry.  Will "eat up"  words to the
left, as many times as you hit it.  If you want to  start over just a little
way back, comes in handy.  


Msg#:   68 *WORDSTAR FORUM*
08/19/85 05:49:18 (Read 32 Times)
From: ASSISTANT SYSOP
To: WORDSTAR USERS
Subj: JUMP BY PARAGRAPH
Jump Cursor to Next Paragraph

^Qf^N^N<CR><CR>

This actually does a find of two cr/lf line endings in a row, so  it jumps to
the next paragraph only if your standard format is to  include a blank line
between paragraphs.  As a matter of policy  it is quite useful to standardize a
format for your own  "manuscript" files, to work in conjunction with a
collection of  special function keys.  Postpone matters of formatting for  
printing until the last thing you do to a file.  When doing text  entry and
conceptual editing, leave justification off, and hyphen  help off -- those
"features" will just slow you down.  

After you have used this key once to jump to the top of the next  paragraph,
you can just hit ^L to repeat and traverse your file  paragraph by paragraph.  


Msg#:   69 *WORDSTAR FORUM*
08/19/85 05:52:02 (Read 32 Times)
From: ASSISTANT SYSOP
To: WORDSTAR USERS
Subj: JUMP N LINES
Jump n Lines

^Qf^N<CR>

This is just the front stub of a FIND command that look for line  endings. 
After hitting the key, you enter a number to tell  WordStar how many lines to
find, then hit the <RETURN> key again.   For example, after hitting the defined
function key enter  55<RETURN> and you will jump 55 lines, the normal length of
a  WordStar page.  To go to the 10th page enter 550.  

After one use, if you want to jump the same number of lines just  use ^L.


Msg#:   70 *WORDSTAR FORUM*
08/19/85 05:52:57 (Read 30 Times)
From: ASSISTANT SYSOP
To: WORDSTAR USERS
Subj: JUMP N PARAGRAPHS
Jump n Paragraphs

^Qf^N^N<CR>

Similar to the previous two keys, this one jumps paragraphs if  they are
delimited by double carriage return/ line feed  sequences.  After hitting the
defined key, enter the number and  hit <RETURN>.  Repeat by ^L.  


Msg#:   71 *WORDSTAR FORUM*
08/19/85 05:53:48 (Read 29 Times)
From: ASSISTANT SYSOP
To: WORDSTAR USERS
Subj: DELETE TO TOP OF FILE
Delete from Cursor to Beginning of File

^Kk^Qr^Kb^Ky

Dangerous.  Its use is pick out a small section of text or data  for retention,
from a larger file.  For example, say you have  captured a log of messages from
TBBS and there is one in there  you want to keep for future reference.  You
could use WordStar to  browse down to the file until your cursor is at the top
of the  material you want to retain.  Hit this key and everything above  it in
the file disappears.  

This key is so dangerous that I have taken it off my keyboard,  preferring to
type in the command sequence myself when I really  want to do a massive delete.
An accidental delete from the  bottom of a valuable file could be trouble, when
you haven't  backed up the fresh work.  


Msg#:   72 *WORDSTAR FORUM*
08/19/85 05:54:38 (Read 30 Times)
From: ASSISTANT SYSOP
To: WORDSTAR USERS
Subj: DELETE TO END OF FILE
Delete from Cursor to End of File

^Kb^Qc^Kk^Ky

This cleans out everything in a file below the material you want  to retain. 
Another example of a useful application for massive  deletion is oilerplating. 
You keep a monster file of all the  paragraphs you might use in a business
letter.  Open a new file  in which to write a current letter.  Then read in the
file which  is your collection of boilerplates.  Select the few paragraphs  you
want to use this time, move them to the top of the file, and  delete the rest
using this special function key.  

Like its sister which deletes everything to the top of the file,  I find this
too dangerous to have around.  I use the command  sequence a lot, but don't
want to be able to do it with one key!   Would rather just type the commands as
fast as I can.  


Msg#:   73 *WORDSTAR FORUM*
08/19/85 05:55:25 (Read 31 Times)
From: ASSISTANT SYSOP
To: WORDSTAR USERS
Subj: DELETE TO END OF PARAGRAPH
Delete to End of Paragraph

^Kb^Qf^N^N<CR><CR>^Kk^Ky

This will get everthing from where the cursor is to the end of  the paragraph,
if you format your paragraphs with double <CR> as  recommended.  Note that it
uses both block operations and find  operations which are in separate
incompatible parts of the  WordStar overlay file, so your disk will be accessed
a couple of  times with this one.  However, not bad with a RAM disk.  Note  
also that where your cursor lands after a find operation differs  slightly
between versions of WordStar so you might have to tinker  with this one to
maintain separation of paragraphs.  

Probably more trouble than it's worth.  I get the same effect  just as fast
with a sequence of ^Qy to lop off the current line,  followed by repositioning
the cursor down and hitting ^Y the  required number of times.  


Msg#:  669 *WORDSTAR FORUM*
10/05/85 07:05:27 (Read 18 Times)
From: PAUL ST. JOHN
To: ASSISTANT SYSOP (Rcvd)
Subj: REPLY TO MSG# 73 (DELETE TO END OF PARAGRAPH)
I just use ^Kb^B^Kk^Ky.  It does the same thing quite effectively.
Paul St. John


Msg#:  685 *WORDSTAR FORUM*
10/06/85 04:32:14 (Read 17 Times)
From: ASSISTANT SYSOP
To: PAUL ST. JOHN (Rcvd)
Subj: REPLY TO MSG# 669 (DELETE TO END OF PARAGRAPH)
Very neat!


Msg#:   74 *WORDSTAR FORUM*
08/19/85 05:57:14 (Read 27 Times)
From: ASSISTANT SYSOP
To: WORDSTAR USERS
Subj: DELETE TO BEGINNING OF PARAG
Delete to Beginning of Paragraph

^Kb^Qf^N^N<CR>B<CR>^Kk^Ky

Similar to the just preceding key, only the FIND operation  searches with the B
for backwards option to find the double 
<CR>'s which define a paragraph.  Again, maybe not worth the  trouble in most
cases.  


Msg#:   75 *WORDSTAR FORUM*
08/19/85 05:58:04 (Read 31 Times)
From: ASSISTANT SYSOP
To: WORDSTAR USERS
Subj: MOVE LINE TO END OF FILE
Move Line to End of File

^Qs^Kb^X^Kk^Qr^Kv^Qv^Kh

This jewel is the prototype for text re-arrangement.  It marks  the current
cursor line as a block and moves the line to the  bottom of the file, then
comes back to where you are working.  If  your file is short enough to exist
entirely in RAM, it is very  quick indeed, and you can move several lines by
hitting this key  several times in quick succession.  

Since each line goes to the end of the file, it appears under the  one which
was previously moved.  Since you return to the place  you just came from, you
are on the very next line.  So hit this  key five times in a row and you move a
five line paragraph to the  bottom of the file.  

About five or six lines seems to be the limit of WordStar's  command buffer and
you will be signaled that the buffer is full  by a beep and the appearance of
some !!!!! marks at the top of  the screen.  Not to worry.  Just slow down a
little and then you  can move some more lines.  


Msg#:  136 *WORDSTAR FORUM*
08/24/85 06:07:16 (Read 33 Times)
From: DAVID GIUNTI
To: ASSISTANT SYSOP (Rcvd)
Subj: REPLY TO MSG# 75 (MOVE LINE TO END OF FILE)

Just a note:
If you use QK.COM to implement the W* macros, you can program this sequence to
the ^Y key so that QK gets the ^Y and moves the line to the end of the file and
Word Star never finds out that a ^Y was entered !  This can save the day for
heavy handed programmers... Because Wordstar will make a buffer for your
commands and if you hold that ^Y down for just a little too long you'll end up
eating more than one line.  When you end your edit with a ^Qc to go to the end
of your file,... (you should always end at the end in N mode because W* keeps a
hi-bit-letter as a pointer to where you are editing, and you don't  want that
high bit in your code),... you can delete all the lines you want to remove form
the bottom of the file (with Block mark and delete) and check to make sure you
didn't get the line that actually pays the overtime, or whatever. and finish
your edit.

Dave


Msg#:  151 *WORDSTAR FORUM*
08/24/85 18:29:53 (Read 33 Times)
From: DICK EZZARD
To: DAVID GIUNTI (Rcvd)
Subj: REPLY TO MSG# 136 (MOVE LINE TO END OF FILE)
Dave--
Like your idea about bullet-proofing WordStar line delete ^Y  by having that
key programmed to send line to bottom of file  instead of into the ether.  Like
throwing stuff into a  wastebasket, later you can make the irrevocable decision
to  actually put a match to it and burn it up.  In the meantime it is  
retrievable in cas of mistake.  
There is another patch which makes it necessary to hit ^Y  two times before a
line delete is actually effective.  That one  involves patching the "Keystroke
dispatch table" of WordStar.  I  used that for a while, then let it go because
it was slowing me  down a little.  Now I am back to living dangerously.  One
touch  of ^Y disappears a line forever.  


Msg#:  491 *WORDSTAR FORUM*
09/19/85 23:05:41 (Read 22 Times)
From: ED GREENBERG
To: DAVID GIUNTI (Rcvd)
Subj: REPLY TO MSG# 136 (MOVE LINE TO END OF FILE)
Dave,

.I take issue with your comment about wordstar keeping a highbit letter in your
file.  Perhaps you're thinking of the bug in WS whereby an accidental ^B in an
non document file will set highbits on that  particular line.   In any case, I
wonder what sort of high bit problem you're referring to.  In four years of
WS-ing programs, I've never experienced anything like what you're referring to,
unless I've accidentally hit ^B.

.                       best,
.                       -edg


Msg#:  518 *WORDSTAR FORUM*
09/21/85 20:15:08 (Read 25 Times)
From: DAVID GIUNTI
To: ED GREENBERG (Rcvd)
Subj: REPLY TO MSG# 491 (MOVE LINE TO END OF FILE)

Hi Ed,
Nice to hear from you again.  This high bit in the middle of the file is, as I
recall associated with doing a ^KS to save from somewhere in the middle of an
edited N-side source. If ^QC is not issued to go to the end of such a file
there is a high bit left (Perhaps ^QP reases it) at the end of the ^KS-saved
block, and this will cause havoc with some compilers.  This is empthirical, ans
even noted in the JRT Pascal manual, in the section of source preperation and
error detection.
Dave


Msg#:  526 *WORDSTAR FORUM*
09/22/85 13:56:11 (Read 26 Times)
From: ED GREENBERG
To: DAVID GIUNTI (Rcvd)
Subj: REPLY TO MSG# 518 (MOVE LINE TO END OF FILE)
I'll try that out and let you know what I find.  I'm surprised.  Never heard
that one before, and it's NOT the way that WS is supposed to find it's way back
to the ^QP point.
.                       -edg


Msg#:  548 *WORDSTAR FORUM*
09/25/85 00:00:47 (Read 24 Times)
From: DAVID GIUNTI
To: ED GREENBERG
Subj: REPLY TO MSG# 526 (MOVE LINE TO END OF FILE)

ED,
I'm not 100% on the ^KS ^QP point, as I've done a ^QC before ^KD for a long
time on EVERY source file I edit with W* and even do an <ESC>B in VDO as a
carry over, and since then I've never had a problem that could be traced back
to highbits of unknown origin.
Dave


Msg#:   76 *WORDSTAR FORUM*
08/19/85 05:58:50 (Read 30 Times)
From: ASSISTANT SYSOP
To: WORDSTAR USERS
Subj: MOVE BLOCK TO END OF FILE
Move Block to End of File

^Qr^Kv^Qv^Kh

Used after you manually mark a block, this will move that block  to the end
ofthe file.  And bring you back to where you are  working.  Aids tremendously
in the re-arrangement of text.  

For example, let's say you have a file which is a mishmash of  notes on roughly
the same subject, but in no particular order.   Starting at the top of the
file, mark blocks that you think  belong in the middle of the file and use this
key to send them to  the end.  When you get done with the first pass, go back
to the  top and go through again sending down stuff that you think  belongs to
the end of the file.  You have just done a rough sort.  

The stuff that "belongs to the beginning" you never touched so it  is in the
front of the file.  The middle stuff went down first  but was bumped back up to
the middle when you sent the end stuff  down on the second pass.  Now you can
do the same kind of sort on  just the beginning stuff.  Pretty soon you will
start to see some  kind of sequence.   

Another use for this one is to use it as an alternate to  deletion.  As you
edit a file throwing stuff to the bottom can be  the equivalent of putting it
in the wastebasket.  It is not  irretrievable until you definitely decide to
put a match to it.   Use this technique as the poor man's "UNDO" command.  


Msg#:   77 *WORDSTAR FORUM*
08/19/85 05:59:39 (Read 27 Times)
From: ASSISTANT SYSOP
To: WORDSTAR USERS
Subj: MOVE BLOCK TO CURSOR
Move Block to Cursor

^Kv^Qv

Proceeding through a file you can mark and move blocks in  sequence.  After you
mark he first block, you prowl around  moving the cursor till you find where
you want the block to  light.  Hit this key and the block comes to the cursor
location,  the cursor snaps back to where the block was and you are ready to  
mark your next block.  

You may not wish to tie up a special function key for a command  sequence as
simple as ^Kv^Qv which is easy to type.  


Msg#:   78 *WORDSTAR FORUM*
08/19/85 06:00:24 (Read 29 Times)
From: ASSISTANT SYSOP
To: WORDSTAR USERS
Subj: MARK PARA AS BLOCK
Mark Current Paragraph as Block

^Qf^N^N<CR>B<CR>^X^X^Qf^N^N<CR><CR>^Kk

The lazy man's block marker.  Provided your paragraphs are  configured
separated with double carriage returns as recommended,  place the cursor
anywhere in a paragraph and hit this key.  The  paragraph will be blocked for
you, ready to move.  

Some cautions:  Won't work unless the paragraph is preceded and  followed by
double <CR>, which is usually not the case for the  first and last paragraphs
in a file.  And may not be the case at  all if you don't format your manuscript
files the same as I do.   Then re-design of this key may be necessary.  Also,
this key  works with WordStar version 2.26.  The positioning of the cursor  
after a find operation differs slightly for some other vrsions  of WordStar so
some tinkering will be required.  

I don't use this one anymore because I am proficient enough at  block marking
to make better time just zinging the cursor up and  down to mark blocks.  


Msg#:   79 *WORDSTAR FORUM*
08/19/85 06:01:20 (Read 29 Times)
From: ASSISTANT SYSOP
To: WORDSTAR USERS
Subj: SETTING UP SORTING BINS
Install Several Sorting Bins

^K1 ^K2 ^K3 ^K4 ^K5 

All this key does is post a sequence of WordStar's place markers.   This is
preparatory to using the markers as targets for text  block movements.  Note
that there is a space between each of the  place markers.  


Msg#:   80 *WORDSTAR FORUM*
08/19/85 06:02:06 (Read 30 Times)
From: ASSISTANT SYSOP
To: WORDSTAR USERS
Subj: MOVE BLOCK TO A BIN
Move Block to Bin n

^Q1^Kv^Qv^Kh
^Q2^Kv^Qv^Kh

This set of keysmoves marked blocks to pre-designated place  markers.  I have
these key definitions installed on some of my  number keys.  When I want to
move text to more locations than  just the top or bottom of the file, I set up
place markers, then  move through the file marking blocks as I go.  After a
block is  marked (by the lazy man's block marker key if you like) just hit  the
appropriate dispatcher key and the block will be moved to the  corresponding
place marker and the cursor will snap back to where  you are working.  


Msg#:   81 *WORDSTAR FORUM*
08/19/85 06:02:58 (Read 30 Times)
From: ASSISTANT SYSOP
To: WORDSTAR USERS
Subj: MARK SENTENCE AS BLOCK
Mark Current Sentence as Block

^Qf  <CR>B^D^D^Kb^Qf  <CR><CR>^Kk

Note that there are two spaces after each ^Qf.  This key is  dependent on the
user being consistent in ending each sentence  with two space characters.  Does
not work on the first sentence  in a paragraph.  Probably more of a stunt than
anything useful.  


Msg#:   82 *WORDSTAR FORUM*
08/19/85 06:03:40 (Read 29 Times)
From: ASSISTANT SYSOP
To: WORDSTAR USERS
Subj: COPY LINE TO END OF FILE
Copy Line to End of File

^Qs^Kb^X^Kk^Qr^Kc^Qv^Kh

This very useful key is sister to the key which moves lines to  the end of
file.  This one sends a copy of the current cursor  line to the end of the file
and leaves you ready to continue  prowling the file.  

Why copy lines to the bottom of the file?  It is an easy way to  make a table
of contents for a text file.  Every so often I  signpost my manuscript files
with headlines (usually use  WordStar's double dot comment line format).  After
a file is more  or less complete I start at the top and place the cursor on
each  heading line, hit this key and send a copy to the bottom of the  file. 
After browsing through the entire file I find a collection  of the headings at
the bottom.  When they are moved to the top  they become a table of contents
for the file and help me to jump  down to a specific location by use of the ^Qf
find operation, by  showing me what I'm looking for.  


Msg#:   83 *WORDSTAR FORUM*
08/19/85 06:04:25 (Read 28 Times)
From: ASSISTANT SYSOP
To: WORDSTAR USERS
Subj: COPY BLOCK TO TOP OF FILE
Copy Block to Top of File

^Qr^Kv^Qv

After markig a block, this key will send it to the top of the  file.  Often
used to move a collection of redundant headings to  the top of the file to
serve as a table of contents for the file.  

Msg#:  140 *WORDSTAR FORUM*
08/24/85 16:04:25 (Read 25 Times)
From: DICK EZZARD
To: WORDSTAR USERS
Subj: VIEW ANOTHER FILE
View Another File

^Kb<CR>^Kk^Qb^KrO<CR>

This key pulls down a shade (cf. window, see article, Shades of  WordStar on
KAY*FOG RBBS #1) into a pre-marked block.  The shade  it pulls down is a file
called, by convention, O.  I always keep  my outline for my current project in
a file called O so when I  use this key I get to glance at my outline.  It
appears in the  text file in which I am working and is distinguished from the  
current text by being pre-marked as a block.  When I am done  looking at the
outline, I hit ^Ky and the outline goes away until  I want to glance at it
again.  


Msg#:  141 *WORDSTAR FORUM*
08/24/85 16:05:11 (Read 23 Times)
From: DICK EZZARD
To: WORDSTAR USERS
Subj: WRITE TO NOTES FILE
Add a Note to Another File

^Qb<CR>^KrN<CR>^KwN<CR>Y^Ky

This allows writing to the tag end of a file different than the  one you are
working in.  By convention the other file is called  N.  If I am working away
and think of something not pertinent to  my current project, or if I get a
phone call and want to remember  something about it, I make a note right in the
file I am working  in.  Mark the note, whatever it is, as a block and then hit
this  key.  

The file N will be read into the block at the top, and the file N  will be
written out again, as an entire block therefore  encompassing the new note.  It
happens so fast you won't see file  N come in, just the blocked note will
disappear.  But when you  later look at File N, all notes will be in there in
the order you  sent them out.  

There must be a file N in existence before you use this key the first  time,
even if that file consists of only one <CR>.  

You need not send just "odd notes" to that N file.  I often use  this key in
culling operations, to run through a copy of a  mishmash file and extract the
paragraphs which pertain to a  particular topic.  After extracting all material
on one topic,  you can rename N, start a new N, and go through the mishmash to 
cull out notes on a second topic.  

This key is also covered in the Shades of WordStar article.  


Msg#:  142 *WORDSTAR FORUM*
08/24/85 16:06:03 (Read 22 Times)
From: DICK EZZARD
To: WORDSTAR USERS
Subj: TAG MARKED BLOCK
Tag Marked Block for Later Remarking

^Qb^K0^Qk^K9^Kh

This key gets around the fact that WordStar only permits one  "active" marked
block at a time.  Sometimes you will want  WordStar to be able to "remember"
the current marked block while  you do something with another block.  This
often arises for me  when I read in an outline as a marked block, then want to
move  some text around to conform to the outline, but know I will want  to
erase the outline again in a little while.  

Hit this key and the block markings are removed, but the "old  block" is tagged
with place marker 0 at the beginning of the  block, place marker 9 at the end. 
I select these place markers  because I often use the lower place markers, 1,
2, 3, 4, as  targets for block moves when re-arranging text.  

Thanks to Ed Greenberg of MicroPro for this "chipping off the old  block"
capability.  


Msg#:  143 *WORDSTAR FORUM*
08/24/85 16:07:03 (Read 23 Times)
From: DICK EZZARD
To: WORDSTAR USERS
Subj: REMARK TAGGED BLOCK
Remark a Tagged Block

^Q0^Kb^K0^Q9^Kk^K9

This key is the sister to the previous one, remarks the  previously marked old
block, after you are done with block  operations elsewhere in the file.  If the
old block was an  outline or notes which have now served their purpose, they
are  now ready for a ^Ky delete.  

Thanks, Ed.   


Msg#:  144 *WORDSTAR FORUM*
08/24/85 16:07:43 (Read 25 Times)
From: DICK EZZARD
To: WORDSTAR USERS
Subj: GHOSTBUSTER
Remove Ghost Lines from Screen

^K0^Qe^Qs^Kb^Qx^Qd^Kk^Q0^K0

This key marks the entire screen as a block, moving the cursor to  the top
left, then to the bottom right, but remembering where it  was in the beginning
and going back there after marking the  block.  

Once in a while when WordStar is being run fast, its screen  display buffer
will get caught with a duplicate line in it.   These extra characters are _not_
in the file, they are just in  the stuff that WordStar is showing on the
screen, and will  disappear if the area they are in is marked as a block -- an 
operation which modifies the contents of the screen buffer (on  most systems). 


Thanks to Martin Nicolaus of East Bay Fog for this "Ghostbuster."  


Msg#:  145 *WORDSTAR FORUM*
08/24/85 16:08:31 (Read 23 Times)
From: DICK EZZARD
To: WORDSTAR USERS
Subj: PRINT MARKED BLOCK
Print Marked Block

^KwP<CR>Y^KpP<ESC>^X

This will send a marked block to the file called P and then print  the file
called P.  Unless you have included formatting dot  commands in the block, the
block will print as a page in  WordStar's default format.  

Note that if you use this one in conjunction with the previous  full screen
block marking, you get what een dump  to the printer at the
touch of two keys, while in WordStar.  


Msg#:  146 *WORDSTAR FORUM*
08/24/85 16:09:15 (Read 23 Times)
From: DICK EZZARD
To: WORDSTAR USERS
Subj: REMOVE LONE CR'S
Remove Carriage Returns NOT Followed by Linefeeds

^Qa^P^M^P^O^P^J<CR><CR>GN<CR>

This is an example of the highly specialized filtering which can  be
accomplished from within WordStar.  This was the answer to a  guy who had to
process some files which had been downloaded from  a remote in a format which
did not include linefeeds on (some?  many?) lines.  By knocking off the odd
carriage returns he was  ready to re-form the files in a more standard manner. 


Believe this came from Mojo Jones of MicroPro.  


Msg#:  147 *WORDSTAR FORUM*
08/24/85 16:09:57 (Read 26 Times)
From: DICK EZZARD
To: WORDSTAR USERS
Subj: REFORM CURRENT PARAGRAPH
Reform Current Paragraph

^Qf^N^N<CR>B<CR>^X^X^B

This will re-form the paragraph you are working in.  Often when  editing text
you will add new words, delete something so that the  lines have changed in
length and the paragraph needs reformation.   This key will do it.  

Presupposes you follow the convention to separate paragraphs with 
_two_ CR/LF sequences (blank line between paragraphs).  

This one is for WordStar version 2.26.  Some versions of WordStar  may put the
cursor in a different location after a backwards Find  operation looking for
two CR/LF.  If so, the number of ^X's in  the key definition may vary.  


Msg#:  148 *WORDSTAR FORUM*
08/24/85 16:10:42 (Read 23 Times)
From: DICK EZZARD
To: WORDSTAR USERS
Subj: UNDERLINE A WORD
Underline a Single Word

^A^P^S^F^P^S

Thanks to Ted Silveira for this formatting key.  

This one will put the printer control codes ^S for underscore at  the beginning
and end of a word just typed.  A variation might be  to put the underscore or
boldface or alternate type size controls  at the beginning and end of a marked
block -- left as an exercise  for the reader.  

Concerning formatting, this is often best left to be the final  task before a
file is output for printing.  Such matters as  justification, hyphen-help and
underscoring, boldfacing, just  slow you down during the "manuscript" drafting
phases of word  processing.  My standard manuscript files are configured to be 
easy to work with, standardized so I can use certain special  function keys I
find useful (especially block marking and moving  to place marker targets), and
jam as much context as possible  onto the limited screen window.  

It is only later that I bother to make a copy of file which is  then gussied up
for display with printer control gadgets like  underlining and boldfacing,
centering, justification, etc.  

           -={ RETRIEVING DELETED TEXT IN WORDSTAR }=-

                      by Laurie J. Braaten

Anyone  who  has worked with WordStar for any length of time  has 
probably  had the misfortune of deleting the wrong line or  block 
of text.  By some fancy manuevering, you might be able to recover 
the  text  from your backup file.   If you  have  a  photographic 
memory, you may be able to retype it in no time.  But if these do 
not  work,  you  should  be set for a frustating time  trying  to 
reconstruct  your  lost data.   Now you can  avoid  this  problem 
altogether by adding a "Yankback" feature to WordStar.   This can 
be  done quite simply with a series of command strings ("macros") 
which  I call "WS Yankback," set up in a key definition  program.  
(The  more  popular commercial key definition  programs  such  as 
Smartkey,  Xtrakey  and  the Backgrounder have been  reviewed  by 
Glenn  Grant in the December 1985 issue of  PROFILES.   KSSTROKES 
4.0,  QWIKEY21,  &  GKEY2 are  public domain programs which  give 
good, but more limited results.)

                    HOW TO SET UP WS YANKBACK

FIRST,  set  up four macros which will now be used to delete text 
in place of their WordStar counterparts.  The first will delete a 
line.  The second will delete a block of text.  The third deletes 
text  left of the cursor;  the fourth deletes text right  of  the 
cursor.   All macros should be entered as continuous text without 
spaces.   The  ^ symbol is the control key,  held down while  you 
type the key which follows it; <cr> is a carriage return (or ^M).

MACRO #1:  ^QS^KB^X^S^KK^KWA:YANKEE<cr>Y^KY
MACRO #2:  ^KWA:YANKEE<cr>Y^KY
MACRO #3:  ^KK^QS^KB^KWA:YANKEE<cr>Y^KY 
MACRO #4:  ^KB^X^QS^S^KK^KWA:YANKEE<cr>Y^KY 

SECOND, enter the yankback command: 

MACRO #5:  ^KRA:YANKEE<cr>

THIRD,  on your WordStar disk,  open a file named "YANKEE."  This 
is  where  your deleted text will be stored.   This file will  be 
overwritten  every time you delete text,  so it does  not  matter 
what you type in it--a  single character will do.   But make sure 
that  you  have adequate disk space for any text you may want  to 
delete (2K-6K should be plenty for most operations). 

Now, when you want to delete a line, use macro #1.  It works just 
like ^Y: place the cursor anywhere on a line and use it to delete 
the  entire  line.   If you want to yank back the  deleted  line, 
execute macro #5.  When deleting a block of text, use macro #2 in 
the  same way you would use ^KY.   Mark the beginning and end  of 
the block with ^KB and ^KK respectively,  and execute macro #2 to 
delete  the marked block.   If the block needs to  be  recovered, 
macro  #5 will yank it back.   Numbers 3 and 4 work like  ^Q<del> 
and  ^QY--only  now  the deleted text can be retrieved  with  the 
yankback command.   (Macro #1 leaves a blank line where the  text 
has  been  removed.   If this is undesirable simple omit  the  ^S 
after the ^X.)

Before  using  WS Yankback,  be sure to test it  thoroughly.   If 
there  are  errors in the way the macros were entered  you  could 
lose  more text than you planned to delete,  and not be  able  to 
recover  it.   Use a practice file and check all of the commands.  
If  they do not work,  carefully recheck the macros to make  sure 
they have been entered correctly.

N.B.  The  yankback  command WILL NOT WORK if you  use  ^Y,  ^KY, 
^Q<del> or ^QY to delete text.   The four macros given above must 
be  used instead of these WordStar commands for the  yankback  to 
recover the deleted text.
                      HOW WS YANKBACK WORKS

WS  Yankback  simply writes the deleted text onto the file  named 
YANKEE,  and  then deletes it from the working  text.   When  the 
yankback  is  used,  the text is read back into your file at  the 
present position of the cursor.   This operation takes some time, 
which  is  its major drawback.   When deleting  blocks  of  text, 
however,  it  may  be worth the extra time to have the  assurance 
that the data can be recovered.   Since WS Yankback always writes 
the deleted line on the text YANKEE,  the recovery operation will 
ONLY  WORK  FOR  THE  LAST  DELETION--you  cannot  retrieve   any 
materials deleted before the last text was deleted.  

                         WHAT ABOUT ^Y ?

If you decide to use the first macro in place of ^Y, you may find 
that  you still have problems with ^Y.   You may accidentally hit 
^Y when you want a ^T,  or you may attempt to type an upper  case 
"Y"  (which,  believe  or  not,  I use quite often) and  hit  the 
control key instead of the shift key.  I have solved this problem 
by following Ted Silveira's advice in PROFILES, July/August 1985, 
p.  44.   Using DDT (etc.) or Winstall's custom patch "+"  (which 
does not appear on the options menu), you may change address 054D 
(0535  in WordStar 3.0) to read "19 19" (hex) instead of "19 00."  
The  result  is that it now takes TWO ^Ys (or ^YY)  to  delete  a 
line,  minimizing the possibilities for an accident.   Now when a 
^Y  is  hit  by mistake,  the space bar will get you out  of  the 
partially executed command.   If you find yourself rapidly typing 
two  or  more ^Ts without looking at either the keyboard  or  the 
results onscreen,  you may want to try Melvyn Halbert's solution, 
found  on  the Tampa Bay KUG board (813-791-1454).   He  suggests 
changing the "19" at the appropriate address to "1C" (hex), which 
will reassign the delete line function to ^\ instead of ^Y. 
nging the "19" at the appropr