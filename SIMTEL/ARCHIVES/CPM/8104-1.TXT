 2-Apr-81 18:47:00,545;000000000000
Date: Thursday, 2 April 1981  18:47-MST
From: Dan at ml
Sender: ___012 at ml
To:   info-cpm at MIT-MC
Subject: Signetics 8X300 Cross Assembler (MCCAP)

Does anyone have access to the Signetics 8X300 MCCAP cross assembler?
According to Signetics, it is available through TYMNET and GE TimeSharing
Network, etc.  It is written in ANSI FORTRAN.  If anyone can locate a
source of this Cross Assembler, plase get back to me, as I am doing some
development work on the 8X300 MicroController and the assembler would
be very helpful.

Dan
 3-Apr-81 23:53:00,1354;000000000000
Date: Friday, 3 April 1981  23:53-MST
From: FONER at MIT-AI (Leonard N. Foner)
To:   INFO-MICRO at MIT-AI, Info-CPM at MIT-MC
cc:   FONER at MIT-AI
Subject: Floppy disk drive alignment disk needed

I have a disk drive for a TRS-80 Model I that recently got dropped
rather severely.  From a preliminary diagnosis, it appears that the
head is about (don't laugh!) one track or so out of *radial*
alignment...  not just azmuth misalignment.  This was a serious fall
or other shock, I assume (I was not there when the drive stopped
working.)

What I need to avoid paying Radio Shack a bundle to repair the drive
is the alignment disk that Radio Shack uses.  It is supposed to align
Shugart SA-400 disk drives, which is close enough to Radio Shack's
somewhat modified design, and is called the SA-124.  This is *not* a
disk diagnostic; it is rather a disk that has specially encoded
biphase pulses at tracks 0, 16, and 34, or something like that, that
is then used with an oscilliscope to position the head properly.

So, I need this disk rather badly.  Does anyone in the Boston area
have this disk that they could let me borrow?  Would anyone like to
buy it from me if I find a source to buy this from?  (I won't need it
when I finish with it, and I might as well resell it...)

Thanx for any help you can provide.

						<LNF>
 5-Apr-81 00:28:00,486;000000000000
Date: 4 Apr 1981 (Saturday) 2328-PST
From: DWS at LLL-MFE
To:   Info-CPM at MIT-AI, Info-Micro at MIT-AI
Subject: CP/M documentation query

The complaint was raised at a CP/M presentation at the Computer
Faire that no CP/M documentation lists register and stack usage
by BIOS call.  (I.e. what registers are preserved and how much
stack gets used).

Does anybody know of any documentation listing the above?  If so,
is it machine readable?  Reply to Info-Micro@AI.  Thanks.
 5-Apr-81 22:23:00,219;000000000000
Date: Sunday, 5 April 1981  22:23-MST
From: Gray at UCLA-SECURITY (Terry Gray)
To:   info-cpm at mc
Subject: BDOS call 37

Any ideas on why BDOS call 37 (Reset Drive) might not work
on my CPM 2.2??

Terry Gray
 5-Apr-81 22:41:00,283;000000000000
Date: Sunday, 5 April 1981  22:41-MST
From: Lauren at UCLA-SECURITY (Lauren Weinstein)
To:   info-cpm at ai
Subject: list convergence

Is there ANYONE on info-cpm who is not also on info-micro?  If not,
we might try to avoid sending to both lists when possible.

--Lauren--
 6-Apr-81 00:08:00,288;000000000000
Date: Monday, 6 April 1981  00:08-MST
From: DAN at MIT-ML
To:   info-cpm at MIT-MC
Subject: Z8000 Assembler needed

Does anyone have a Z8000 assembler, preferably one that runs on an 8080/Z80
under CP/M and turns out Z8000 object code in absolute or hex code.

Replies to DAN@ML
 6-Apr-81 01:21:00,1588;000000000000
Date: Monday, 6 April 1981  01:21-MST
From: W8SDZ at MIT-MC (Keith B. Petersen)
To:   GRAY at UCLA-SECURITY
cc:   INFO-CPM at MIT-MC

In responce to your request for function #37 - here's all I
have.  I hope it helps.  Make sure your 16-bit value is set
correctly.

                             NEW CP/M 2.2
                            BDOS FUNCTIONS 


*************************************
*  FUNCTION 37:   RESET DRIVE       *
*************************************
*  Entry Parameters:                *
*      Register   C:   25H          *
*      Register  DE:   Drive Vector *
*                                   *
*  Returned Value  :                *
*      Register   A:   00H          *
*************************************


The RESET DRIVE function allows resetting of specified drive(s).
The passed parameter is a 16 bit vector of drives to be reset;
the least significant bit is drive A.

In order to maintain compatibility with MP/M, CP/M returns a
zero value.





*************************************
*  FUNCTION 40:   WRITE RANDOM WITH *
*                    ZERO FILL      *
*************************************
*  Entry Parameters:                *
*      Register   C:   28H          *
*      Register  DE:   FCB Address  *
*  Returned Value  :                *
*      Register   A:   Return Code  *
*************************************


The WRITE RANDOM WITH ZERO FILL operation is similar to
FUNCTION 34;  with the exception that a previously unallocated
block is filled with zeros before the data is written.
 8-Apr-81 08:58:00,615;000000000000
Date: Wednesday, 8 April 1981  08:58-MST
From: Gray at UCLA-SECURITY (Terry Gray)
To:   info-cpm at mc
Subject: CPM 2.2 bug

I heard from a software vendor at the West Coast Computer Faire 
that there is a bug in CPM 2.2 that Digital Research has sent
a patch to their OEMs to correct.

The symptom is that if the last thing you do to a file before
closing it is a random write to the first record, the buffer
will not be flushed, and the modified record will not be written to disk.

The patch is aupposed to be just a few bytes in MOVCPM.

Has anyone got confirmation or more information on this?
 8-Apr-81 21:21:00,761;000000000000
Date: Wednesday, 8 April 1981  21:21-MST
From: DAN at MIT-ML (Daniel J. Blumenfeld)
To:   info-cpm at MIT-MC
Subject: Get those Intel manuals out...

I've obtained a bunch of Intel memory boards, and I am trying to determine
which Intel memory system they are from.  The number on the board is:

	Memory Unit  MU-780

and they have 112 2147's on them for a total of 56K by 8 bits.  I have
both the Intel Component manual and the Intel Systems manual, but the
board (or the system that the board fits in) is not listed anywhere;
however, I believe that the board is not a custom job.  The main problem
is that there seems to be no "global" Intel manual which lists "everything"
that they manufacture.  Replies directly to DAN@ML...  Thanx  - Dan
 8-Apr-81 21:38:00,644;000000000000
Date: Wednesday, 8 April 1981  21:38-MST
From: RGF at MIT-MC (Ronald G. Fowler)
To:   gray at UCLA-SECURITY
cc:   INFO-CPM at MIT-MC

  I have uploaded a file for your perularusal into mt:cpm;22cpm doc
that contains a field change notice published by DR  .  This should
be the information you need.
  Note that although the file contains references only to systems
employing the DIgitigital Research deblocking algorythnms,hms, it actually
applies to all systems employing anyANY deblocking algorthms.
  Please forgive my use of backspace in this message, hope it doesn't
cause any problems on your termiannal.
 9-Apr-81 02:35:00,2908;000000000000
Date: Thursday, 9 April 1981  02:35-MST
From: W8SDZ at MIT-MC (Keith B. Petersen)
To:   INFO-CPM at MIT-MC, INFO-MICRO at MIT-MC
Subject: CP/M random write buffer flush

My appologies to those who get this message twice.  I thought
it important enough to pass along to as many people as possible.

If your CBIOS uses any kind of deblocking to interface between
CP/M's 128-byte sectors and your disk's actual physical sector
size, the following patch MUST be done to your system.  The
addresses shown are for standard distribution CP/M.  Those who
have Morrow systems will find the patch area at 23D2 instead of
the 1CD2 shown.  Early issues of Morrow's CP/M 2.2 did not have
this patch.  After you make the patch, if you are using Morrow,
you can delete the "CALL FLUSH" statements in your console input
and output routines, thus cutting down on the amount of disk
accesses when running WordStar or other similar text editors that
scroll through a disk file.

DIGITAL RESEARCH CP/M [R] 2.2 FIELD SOFTWARE CHANGE
         Copyright (c) 1980   Digital Research

ID# CPM22-0001    PROGRAM: BDOS     ISSUE DATE: 02/19/80


ERROR DESCRIPTION:  The following change affects only those CP/M
systems which are using the optional blocking and deblocking al-
gorithms listed in Appendix G of the CP/M Alteration Guide.  If
you are in doubt as to the applicability of this field change,
please contact Digital Research or your CP/M distributor.

PATCH PROCEDURE:  Ensure you have an archive copy of the distri-
buted MOVCPM.COM file.  Make changes to a version of MOVCPM>COM
by carefully following the steps shown below:  MOVCPM.COM is
loaded into memory using DDT and the changes are made using the
Assemble (A) and Set (S) commands.  After making the changes,
return to the console command processor using the Go (G) command,
and SAVE the altered memory image on disk.  The memory image on
tracks 0 and 1 must also be updated.  This can be accomplished
by executing the new MOVCPM program, as described in the CP/M
Alteration Guide, and integrating your customized I/O system.


                     ddt movcpm.com
                     DDT VERS 2.0
                     NEXT PC 
                     2700 0100
                     -a1cd2
                     1CD2 nop
                     1CD3 nop
                     1CD4 lxi h,0
                     1CD7


                     G0
  
                     save 38 movcpm.com


NOTE:  This Field Software change is not installed in the CP/M
version 2.2.  It must be installed in all systems which use the
deblocking algorithms listed in Appendix G of the CP/M Alteration
Guide.

END OF FIELD CHANGE NOTICE.

The code you are replacing is:
	DCR	C
	DCR	C
	JNZ	(ADDRESS)

The patch effectively nullifies that code, causing CP/M to properly
instruct your CBIOS to update the last sector written.
12-Apr-81 12:37:00,531;000000000000
Date: Sunday, 12 April 1981  12:37-MST
From: W8SDZ at MIT-MC (Keith B. Petersen)
To:   INFO-CPM at MIT-MC, DAN at MIT-ML
Subject: Little known CP/M calls

Dan@ML asked about BDOS calls 38 and 39 on CP/M 2.2.  These are not
implemented.  A disassembly of BDOS shows that these calls will point
to a RET (return) instruction, and thus have no effect.  They are
reserved for use with MP/M, where they have the following meanings:

Function 38:	Access drive
Function 39:	Free drive

See the MP/M manual for more details.
13-Apr-81 05:15:00,686;000000000000
Date: Monday, 13 April 1981  05:15-MST
From: Keith B. Petersen <W8SDZ at MIT-MC>
To:   INFO-CPM at MIT-MC
Subject: New AUTOMATIC Findbad program

I have uploaded a new version of FINDBAD, the program that
locks out bad sectors on a CP/M disk.  The new program is
totally automatic - that is, it works like DU and SD, picking
up the disk parameter block and version number from your CP/M
and adjusting itself accordingly.  It should work correctly
with any standard 1.4 or 2.x CP/M system.  Thanks to Ron Fowler
(RGF@MC) for the excellent programming.  Reports would be
appreciated.  (send them to RGF@MC with CC to W8SDZ@MC).
Thanks.
   The file is in MC:CPM;FBAD52 ASM.
14-Apr-81 18:26:00,439;000000000000
Date: Tuesday, 14 April 1981  18:26-MST
From: DAN at MIT-ML (Daniel J. Blumenfeld)
To:   INFO-CPM at MIT-ML
Subject: AMDOS on Advanced Micro Devices AMSYS 8/8... compatable with CP/M?

Does anyone own or have access to an Advanced Micro Devices (or more 
accurately, Advanced Micro Computers) AMSYS 8/8?  I was wondering if their
AMDOS Operating System is just another flavor of CP/M (I've heard rumors that
this is true).

Dan
20-Apr-81 19:22:00,479;000000000000
Date: Monday, 20 April 1981  19:22-MST
From: Paul L. Kelley <PLK at MIT-MC>
To:   INFO-CPM at MIT-MC
Subject: MODEM527.ASM

	MODEM527.ASM now exists on the CPM directory as MODEM 527.

	I have renamed MODEM2 ASM as MODEM 926.

	According to Keith Petersen MODEM527.ASM is, if I correctly
remember what he said, close to Ward's original version of MODEM2 and
has less unnecessary frills than MODEM926.ASM. It was uploaded with
LMODEM at 1200 baud in about 9 minutes.
20-Apr-81 21:45:00,226;000000000000
Date: Monday, 20 April 1981  21:45-MST
From: Paul L. Kelley <PLK at MIT-MC>
To:   INFO-CPM at MIT-MC
Subject: SIG/M Newsletter for April

	The SIG/M Newsletter for April is now on the CPM directory
as:
	
	SIG/M	APR81
21-Apr-81 07:01:00,274;000000000000
Date: Tuesday, 21 April 1981  07:01-MST
From: JSWAIN at BBNA
To:   info-cpm at MIT-MC
Subject: Location of source of XMODEM.ASM

	Could any-one please tell me where I could pick up a copy
of the source for the XMODEM.asm file?  Thank-you.

	John Swain  JSWAIN@BBNA
22-Apr-81 11:30:00,194;000000000000
Date: Wednesday, 22 April 1981  11:30-MST
From: Paul L. Kelley <PLK at MIT-MC>
To:   INFO-CPM at MIT-MC
Subject: XMODEM ASM

	XMODEM version 4.1 is now on the CPM directory as XMODEM ASM.
24-Apr-81 11:53:00,368;000000000000
Date: Friday, 24 April 1981  11:53-MST
From: MOORE at USC-ISIB
To:   info-cpm at AI
cc:   moore at USC-ISIB
Subject: sort program wanted

I have a ~100K file of names & addresses, etc.  I need to sort by zip
and name -- what sorts are available which can handle this in some reasonable
manner (Public domain preferred, of course).

Jim Moore (moore @ isib)
24-Apr-81 13:18:00,360;000000000000
Date: Friday, 24 April 1981  13:18-MST
From: Jim Moore <MOORE at USC-ISIB>
To:   info-cpm at MIT-MC
Subject: sort wanted ...

I have a ~100K cp/m file of names & addresses, etc.  I need to sort by zip
and name -- what sorts are available which can handle this in some reasonable
manner (Public domain preferred, of course).

Jim Moore (moore @ isib)
24-Apr-81 22:20:00,1663;000000000000
Date: Friday, 24 April 1981  22:20-MST
From: Robert E. Spivack <PHOTOG at MIT-MC>
To:   INFO-MICRO at MIT-MC, INFO-CPM at MIT-MC, FJW at MIT-MC,
      W8SDZ at MIT-MC, BLUE at MIT-MC, CHUCKG at MIT-MC,
      RAIDER at MIT-MC, CSTACY at MIT-MC

Need urgent help with Ithaca Intersystems dps-2 mainframe.
I am in r.i. installing an intahaca system for my Dad's company.
We thought it would plug in and run mujust like the other
s-100 systems i have brought up in thepast, well, we were wrong.
we found lots of problems and cannot determine if it is hardware
failure, or even if all the 10,0001 jumpers on the itahhaca boards
are wrong, we have chec with the manulals, and will re-check again.
commentary---Itaca intersystems are the first s-100 boards I have ever
see that actually have those little bitty 'kludge' wires on the
circuit side of the board--guess the are too cheap to re-do the
board until the number of blue wires to install justifes the cost.
aywa, the problem is, that i am out here in r.i wit abut only
four 4 days to get this sytem up.  what we really need is for sme
kind soul in the ri or ma area who has an 
ithaca intersystems running to volumnteer to play musica boards with
usor help us solve our prolbme.  the syste is brand new out of
tje bpx adhe box and the non-computer tpes at the company are VERY
disillusoned wit all computers right now!!!!!!!
call bob spivack at either 401-828-4550 or
401-8885-1563 please respond before the end of the weekend if possible.
thank you.
bob spivack---very humbled micro-computnging hacker par fair??????
(please excuse the poor typing [401-885-1563]
25-Apr-81 02:36:00,1054;000000000000
Date: Saturday, 25 April 1981  02:36-MST
From: Keith B. Petersen <W8SDZ at MIT-MC>
To:   INFO-MICRO at MIT-MC, INFO-CPM at MIT-MC
cc:   W8SDZ at MIT-MC
Subject: [W8SDZ: Northstar/modem conflict]

Date: 25 April 1981 04:32-EST
From: Keith B. Petersen <W8SDZ>
To:   MMD at SU-AI
cc:   BUG-MTN, W8SDZ
Re:   Northstar/modem conflict

This is not an "official answer" from BUG-MTN, but I noticed your
message there and wanted to pass along a bit of info you may find
useful.  If you are using a Horizon mainframe, you cannot use port C0H
for the PMMI modem.  The reason is that that port is used by the
mother board for some sort of parity business with Northstar memory.
Everyone I know who has a Horizon II has had this problem.  It doesn't
seem to matter whether you have the parity option on your memory
boards or not.  The symptom is unexplained bombing of programs used
with the modem.  Anytime the program does an output to port C0H, it
messes up the system memory.
   Around here, Horizon owners have standaradized on port B0H.
25-Apr-81 03:04:00,1111;000000000000
Date: Saturday, 25 April 1981  03:04-MST
From: Max Diaz <MMD at SU-AI>
To:   info-cpm at MIT-MC
Subject: MTN and N*    

In N* port 0C0H is used to "arm the parity logic" in all RAM boards.
Actually MTN worked all right in terminal mode for a while after the
following patch:

    18-Apr-81  0058       Frank J. Wancho <FJW at MIT-MC>  MTN21 fix   
   Date: 18 April 1981 03:58-EST
   From: Frank J. Wancho <FJW at MIT-MC>
   To: MMD at SU-AI
   cc: FJW at MIT-MC

   ...Do the following patch to a copy of the MTN21.COM file:

   13A0 -> 00
   13A1 -> 00
   13B5 -> 00
   13B6 -> 00
   1669 -> 00
   166A -> 00

   This will start you up using BDOS console I/O instead of BIOS console
   I/O.  When you get to the part that offers you a choice of method of
   console I/O, you will only have two real choices, BDOS, or "Direct".

   The reason behind this is that your BIOS uses registers H and L
   without saving them - and MTN doesn't either.

HOWEVER I now have a parity problem in one of my boards, and am
wondering whether it was somehow damaged beacuse of that...(???)
28-Apr-81 23:09:00,1789;000000000000
Date: Tuesday, 28 April 1981  23:09-MDT
From: Frank J. Wancho <FJW at MIT-MC>
To:   INFO-CPM at MIT-MC
Subject: New Files in MC:CPM;

There are several new files in the CPM directory on MC:, namely:

MC:CPM;CPMNET MAR81
MC:CPM;CPMNET APR81
MC:CPM;CPMNET MAY81

There are others.  For those of you on any of the ITS machines, just
type:

:PRINT MCDIR:CPM;CDATE DOWN

to get a list of files in reverse creation date order.

For those of you elsewhere on the net, use FTP and connect to MC.
Then type:

ASCII
GET DIR:CPM;CDATE DOWN

Remember to type TENEX to return to binary transfers.

You should also be able to use wildcarding:

From an ITS machine:

:FIND MC:CPM;xxxxxx yyyyy

where xxxxxx and/or yyyyyy may be any combination of characters with
the asterisk (*) as the wildcard.

Using FTP:

ASCII
GET DIR:CPM;FIRST xxxxxx

====================

Thanks to Ed Barton (EB@AI), those of us on some of the ITS machines
can now reliably up and down load both ASCII and COM files using the
MODEM program on our micros and LMODEM on the ITS end.  LMODEM
implements the MODEM2 protocol (see MC:CPM;MODEM2 PROTO for a writeup
of the protocol).  Hopefully, one or more people might be willing to
volunteer to implement the same protocol on their home machine in a
transportable version (C, MIDAS, and FAIL are the most likely
candidates).  Why?  Well, in less than a year my office will have a
host of our own on the net and there should be plenty of room to hold
all of the CPMUG and SIG/M libraries and then some online and
available for MODEMing during the offhours.  To do that, we will need
a non-ITS program similar to LMODEM...initially.  Volunteer hackers
are urged to get a copy of the writeup and keep in touch with me.

--Frank
29-Apr-81 13:08:00,652;000000000000
Date: Wednesday, 29 April 1981  13:08-MDT
From: Frank J. Wancho <FJW at MIT-MC>
To:   INFO-CPM at MIT-MC
cc:   FJW at MIT-MC
Subject: MODEM2 on the net

The term "home computer" in my last message was a poor choice of
words.  What I meant was the mainframe on the net where you "live".
It was also pointed out that there is a BDS-C version of the MODEM2
protocol in MC:CPM;CMODEM C, and MC:CPM;DCH H, sitting there waiting
for some C wizard to convert to run on the mainframe end(s).  Such a
version could be used on the PDP 11/70's running UNIX, as well as
several TOPS-20 and TENEX machines which have equivalent C compilers.

--Frank
29-Apr-81 16:04:00,1028;000000000000
Date: Wednesday, 29 April 1981  16:04-MDT
From: MOORE at USC-ISIB
To:   info-cpm at AI
cc:   moore at USC-ISIB
Subject: looking for a program ...

Does anyone out there have (access to) a cp/m-compatible program to do
resource-desired/resource-available matching (E.g.: car pooling).  That
is, a file is maintained of participants, and for each, features of self
and desired features of "match".  For Car pooling:
	Self-features			Desired features of match
	   leaving (x,y)		   leaving (x', y')
	   lv. 8a.m. +/- 5		   arr. < 9a.m.
	   like rock music		   non-smoker 
The intent is that for a particular participant, a set of acceptable matches
are discovered between his entry and those already on file.  Ideally, there
would be both mandatory matching (must accommodate wheelchair) and preference
matching (walk less than 3 blocks either end).  

No doubt, many such programs exist already-- I don't know if they've made it
to the Micro-world yet.

Thanks for any pointers.

Jim Moore (moore @ isib)
30-Apr-81 00:50:00,734;000000000000
Date: Thursday, 30 April 1981  00:50-MDT
From: Steven T. Kirsch <SK at MIT-MC>
To:   INFO-CPM at MIT-MC

What I have is an RS-232 port to a big machine.  I would like to make
it look like the RS232/big machine combination is a file-server to my
CP/M machine, i.e., CP/M treats the rs232 port like a "B" disk.  I am
willing to write the protocol at the other end.

I understand CP/Net does what I want in the way I expected.  However,
since I only need the slave portion (SNIOS and BNDOS), the master
portion (MP/M and the NWRK stuff) is useless.  Digital Research won't
sell the slave portion alone.

Has anyone done a comparable thing using public domain software, or do
I just buy the software and trash half of it?
