    The SAM76 language deals mainly with the manipulation  of
text.  The texts,  however, contain expressions, scripts and
procedures written by the user, and as such can contain both
character    strings  and program instructions.  SAM76 is an
interactive, surprisingly powerful language,  which  appears
to  be  good  for  gaming  and    artificial    intelligence
applications.   Powerful, recursive macros or procedures may
be    constructed.    It  is  a  language  which  encourages
intellectual juggling.  
   It is an esoteric language.  You will need a good  amount
of  intellectual  curiosity  to  go  beyond    the    simple
experiments  you  are apt to make as a result of having this
disk.  When SAM76 was in  its  infancy,  Claude  Kagan,  the
chief  developer,  provided source code to people who wanted
to help in its development.  There  was  a  catch,  however.
You  had  to  pass  a comprehensive test on the  language to
demonstrate that you really understood it.  
   We hope we are  not  undermining  the  character  of  the
language  by  helping  you  see  the  language  work without
subjecting you to the required amount of effort.    However,
let  it  be  known  that  there  are  a  good   number    of
demonstration  routines  included  on  this disk, which have
been provided deliberately without much documentation.   The
developers  purpose  is  to  compell the user to do a lot of
hard work and thereby learn how to understand the use of the
language.  
   First of all, we must explain,  the  changes  which  were
made  to  the  contents  of  the disk in order to reduce the
space requirements, and to provide, thanks to Claude  Kagan,
a  more recent version of SAM76 than was originally provided
some time ago.  The information  provided  in  some  of  the
other  DOC files refers to SAM76.COM as being the only SAM76
file on the CPM Users Group disk.  Actually,  this  file  is
called  S.COM  on  this  disk, so it will conform with other
documentation.  This version, S.COM, will  not  display  the
restart  expression &os,%is//= as explained in the Dr. Dobbs
article. However, you may create a version  to  do  this  by
keying in the following from CPM:  

A>ilraw

A>cpmsetl

&os,%is//=          (You are now in SAM76)

Now get the "G" function:

%bf,G/=

and execute it:

%G/=

Then type: save 63 s.com  

which will get you a copy of SAM customized for your system.

   The article in Dr.  Dobbs  Journal,  Volume  3,  Issue  1
(Number 21), will get you going with the language.  Then, if
you like it and want to learn more, buy or borrow a copy  of
the SAM76 manual.  SAM76 is a general purpose language and a
powerful  one, but lets face it, it will not be the language
of choice for a lot  of  people.  If  you  like  to  explore
computer languages, you will enjoy exploring this one.  
   To prove that SAM76 really works, key  in  the  following
and  you  will  generate  1960's  style newspaper headlines,
randomly, ad infinitum, such as HIPPIES SHOUT "MAKE LOVE NOT
WAR".  I'm a little older, and in my day we made both.  

  A>s news

  ^C or %ex/= will take you back to CPM.

   In SAM76 the "=" does the equivalent of "return"  in  CPM
or BASIC.  It  is  preferrable  to  "return" in that you can
imbed  returns  in  the  character strings since "=" must be
used to terminate the text.
   The SAM file, DEMO.SAM, includes routines for  converting
decimal  numbers to Roman Numerals, a routine which develops
the winning moves for the game  HANOI  (see  the  Dr.  Dobbs
article), and a game played in the Dutch language, which not
even the SAM76 Manual explains. You're supposed to figure it
out  yourself.  Try  the  following after you are in  SAM to
convert from decimal to Roman:  

%bf,demo/=      (This will bring file called demo.sam)

%lt, * /=       (This will list (the names of) texts
                 contained in the file(s) you have brought
                 into the text area)

%vt,DTR/=       (This will allow you to view text called DTR)

%DTR,1980/=     (This will give you the Roman numeral for 1980)

   The rest of the SAM files are there for you to experiment
with. You can view the texts and decipher them by using  the
Dr.  Dobbs article.  Then you may want to write some of your
own. The FNT files are for the graphics applications, as  is
PLOT.ASM.  EXTF.ASM  has the purpose of providing the coding
for a real time clock. The DOC files are for you to type  to
get further documentation.  
   The remaining COM files are  either  explained  in  other
documentation  on  this  disk,  or are utilities that Claude
Kagan has fixed up and  finds  useful  for  himself  and  is
providing  here.  These  are  essentially  previous CPM user
group utilities that have been improved and may be useful to
some members. They are as follows:  

COPY.COM  -  A disk copy program. Only 1K and fast. Specify
             System, Data, or All.

KSAP.COM  -  Sorts the directory on Drive B.
 
XD.COM    \
XDIR.COM   > Various directory listings. Choose you favorite.
XM.COM    /        


    ----------------reviewed by Stan Ericson, Rockford, Il.
