VOLUME 17

UTILITIES, DENVER TINY BASIC AND NON-BASIC GAMES

NUMBER	SIZE	NAME		COMMENTS

		CATALOG.17	CONTENTS OF CP/M GROUP VOL 17
		VOLUME17.DOC	COMMENTS ON CERTAIN PROGRAMS
17.1	13K	3DTICTAC.ASM	GAME NOT YET PATCHED TO CP/M
17.2	50K	CROROS.ASM	CROMEMCO RESIDENT OPERATING SYSTEM
				SEE VOL.DOC
17.3	16K	DENVBAS.ASM	DENVER TINY BASIC FROM DR. DOBBS
				NO CP/M I/O YET
17.4	6K	DISASM.COM	REVISION OF INTEL DISASSEMBLER
				SEE VOL.DOC
17.5	6K	DISPLAY.ASM	PART OF SPACE GAME. SEE VOL.DOC
17.6	6K	FUNCTION.ASM	PART OF SPACE GAME. SEE VOL.DOC
17.7	14K	MINOL.ASM	CORRECTED VERSION OF A TINY BASIC
				FROM DR. DOBBS
17.8	2K	NUMS.ASM	PART OF SPACE GAME. SEE VOL.DOC
17.9	25K	PROCCALC.ASM	PRO TECH DESK CALCULATOR PACKAGE. SEE
				VOL.DOC
17.10	19K	SPACE.ASM	PART OF SPACE GAME. SEE VOL.DOC
17.11	7K	Z80-OPS.ASM	Z-80 MNEMONICS RECOGNIZED BY ASMX 16.1



DENVBAS.ASM -- THIS IS DENVER TINY BASIC FROM DR. DOBB'S. IT CONTAINS
	NO CP/M I/O.
 
Z80-OPS.ASM -- THESE ARE ALL OF THE MNEMONICS RECOGNIZED BY THE ASSEMBLER
	'ASMX.COM' 16.1
 
MINOL.ASM -- THIS IS A TINY BASIC FROM DR. DOBB'S.  IT CONTAINS
	NO CP/M I/O.  NUMEROUS ERRORS IN THE ORIGINAL LISTING HAVE
	BEEN CORRECTED.
 
SPACE.ASM, FUNCTION.ASM, DISPLAY.ASM, NUMS.ASM -- THESE ARE THE SPACE
	WAR PROGRAM FROM BYTE MAGAZINE, OCTOBER 1977.  THEY ARE ALMOST
	ALL MACROS, SO MUST BE ASSEMBLED WITH MACASM 16.8
 
CROROS.ASM -- THIS IS THE FAIRLY RECENTLY RELEASED CROMEMCO
	RESIDENT OPERATING SYSTEM (ROS).  IT IS OBVIOUSLY AN EXTENSION
	OF THE PROC-TECH PACKAGE NO. 1.  THEY HAVE MODIFIED THE 
	ASSEMBLER IN IT TO ACCEPT Z80 MNEMONICS OF THE TYPE USED
	BY ZILOG (AS CONTRASTED WITH THE TDL MNEMONICS).  THIS SOURCE
	IS A DISASSEMBLY OF CROMEMCO'S HEX FILE.  IT CONTAINS NO CP/M
	I/O.  THE PAPER TAPE AND THE MANUAL (WHICH YOU WILL HAVE TO 
	OBTAIN ELSEWHERE) CONTAINED NO COPYRIGHT NOTICES AT ALL; I'M
	NOT SURE WHAT THE IMPLICATIONS OF THAT ARE.
 
3DTICTAC.ASM -- THIS IS A THREE DIMENSIONAL TIC-TAC-TOE GAME WRITTEN
	BY THOMAS ROLANDER FORMERLY OF INTEL.  IT CONTAINS NO CP/M I/O.
 
PROCCALC.ASM -- THIS IS ANOTHER PIECE OF SOFTWARE DISTRIBUTED FREE
	BY PROCESSOR TECHNOLOGY.  IT IS A 'DESK CALCULATOR' PLUS A
	BCD FLOATING POINT PACKAGE.  THE SOURCE FOR THE FLOATING POINT
	PACKAGE IS A DISASSEMBLY.
 
DISASM.COM -- THIS IS A VERY NICE DISASSEMBLER WHICH ORIGINALLY CAME 
	FROM THE INTEL USER'S GROUP.  IT HAS BEEN EXTENSIVELY IMPROVED
	AND Z80 MNEMONICS HAVE BEEN ADDED.  IT REQUIRES A HEX FILE AS
	ITS INPUT.  AN EXAMPLE OF ITS INVOCATION IS:
 
		DISASM PROG.HEX [PROG.ASM]
 
	IF THE SECOND FILE NAME IS NOT PROVIDED, THEN THE PUNCH OUTPUT
	IS SENT TO THE CONSOLE.  WHEN THE DISASSEMBLER COMES UP, IT
	ASKS IF THE OUTPUT IS TO BE PUNCHED.  IF THE ANSWER IS NO, (N)
	THEN THE OUTPUT IS SENT TO THE CONSOLE AND THE OBJECT CODE IS
	LISTED AS WELL AS THE DISASSEMBLED SOURCE, SO THE OUTPUT LOOKS
	AS IF IT WERE COMING FROM AN ASSEMBLY.  IF THE ANSWER TO THE 
	FIRST QUESTION IS YES, (Y) THEN NO OBJECT CODE IS LISTED,
	AND A FURTHER QUESTION, 'WANT TABS?', IS ASKED.  IF THIS
	QUESTION IS ANSWERED YES, (Y) THEN TABS ARE INSERTED IN THE 
	OUTPUT SOURCE IN THE USUAL MANNER; OTHERWISE SPACES ARE USED.
	IF, WHEN THE DISASSEMBLER WAS INVOKED, A SECOND FILE WAS NOT
	SPECIFIED (THE FILE PROG.ASM IN THE EXAMPLE ABOVE), THEN THE 
	SOURCE OUTPUT (WITHOUT THE OBJECT IN THIS CASE) WILL BE SENT
	TO THE CONSOLE.  THE TYPE OF THE SECOND FILE IN THE EXAMPLE
	ABOVE WILL ALWAYS BE FORCED TO TYPE 'ASM'.
	IF THE HEX FILE BEING DISASSEMBLED HAS CODE WHICH
	DISASSEMBLES AS THOUGH IT REFERENCES ADDRESSES OUTSIDE THE
	REGION INCLUDED IN THE HEX FILE, THOSE ADDRESSES WILL BE
	ABSOLUTE QUANTITIES; OTHERWISE, THEY WILL BE SYMBOLIC LABELS.
 
