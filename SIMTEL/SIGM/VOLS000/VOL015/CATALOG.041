VOLUME 41

(1) Ham radio programs
(2) Chess program
(3) VDM Pong program
(4) Fortran least squares curve fitting program

NUMBER	SIZE	NAME		COMMENTS


		-CATALOG.041	CONTENTS OF CP/M VOL. 41
	   	ABSTRACT.041	Abstracts on some files
41.1	12K	BMAINT.BAS	(1) Ham maillist maint. BASIC/E
41.2	12K	BREPORT.BAS	(1) Ham maillist report
41.3	26K	CHESS.COM	(2) COM of 41.5
41.4	2K	CHESS.DOC	(2) DOC on chess program
41.5	24K	CHESS.FOR	(2) Cromemco Z-80 Fortran Chess
41.6	2K	CODE.BAS	(1) Simple Morse code receiver
41.7	3K	HAMPROGS.DOC	(1) Doc on BMAINT, BREPORT,
				    RTTY, etc.
41.8	2K	LABELS.BAS	(1) Print return labels
41.9	6K	MOONLOC.DOC	(1) Doc on 41.10-41.13 which
41.10	3K	MOONLOC1.BAS	    are various versions of
41.11	3K	MOONLOC2.BAS	    programs to locate the
41.12	7K	MOONLOC3.BAS	    moon's position to do
41.13	5K	MOONLOC5.BAS	    moon bounces
41.14	8K	MORSE.ASM	(1) Morse send/receive prog.
41.15	7K	PONG.ASM	(3) PONG for the VDM (re-
				    release of CP/M U.G. 6.9)
41.16	8K	PRACTICE.ASM	(1) Morse code teacher
41.17	2K	RANDTEXT.BAS	(1) Generate text for 41.16
41.18	2K	RESIZE.DOC	(1) Part of ham maillist system
41.19	5K	RESIZE2.BAS	(1) Part of ham maillist system
41.20	5K	RESIZE3.BAS	(1) Part of ham maillist system
41.21	26K	RTTY.ASM	(1) RTTY send receive program
41.22	12K	SSPLIB.FOR	(4) Curve fitter/simultaneous
				    linear equation solver.
41.23	10K	TEACH.ASM	(1) Morse Code teaching prog.
41.24	9K	TTY.ASM		(1) Baudot-coded-ASCII to ASCII
41.25	5K	TTYR.ASM	(1) Variation of 41.24
41.26	5K	TTYR1.ASM	(1) Variation of 41.24
41.27	5K	TTYX.ASM	(1) Xmit ASCII via conversion
				    to Baudot-coded-ASCII



-------------------- VOLUME 41 ABSTRACTS ----------------------

TITLE:  HAM RADIO, CHESS, ASSEMBLER GAMES

CHESS.COM ABSTRACT 12/25/79
     Typical Application: A friendly game of computer chess.
     Memory Requirements: 40K CP/M System.
There was no documentation provided with this program.
There is a CACHE-generated .DOC file which details the
command format and message outputs.  There are also
some comments on the comparison tests I ran between
CHESS.COM & Fidelity Electronics' Chess Challenger 7.
There is no modification necessary to run CHESS.COM in
a standard CP/M system.
     Overall, this seems to be a fairly well-done chess
program that will give you some challenging games.
Have fun!
			Jim Mills, C.A.C.H.E. Member

ABSTRACT FOR CODE.BAS WRITTEN BY WARD CHRISTENSEN
MBASIC MORSE CODE RECEIVE PROGRAM

This is a very short program that should run in just about any
size memory that supports CP/M.  It does require a hardware
interface between the computer and radio receiver.  As usual,
Ward's programs are well written.
			Jim Mills WB9KFP
			CACHE Member

ABSTRACT FOR LABELS.ABS Written by James K. Mills
PROGRAM TO PRINT RETURN ADDRESS LABELS

This program was written for return address labels, but I have
also found it useful for making other address labels out to
mail to others -- especially if you need 4 or 5 labels for
different envelopes or packages.  This program is very short
and should run in just about any system supporting CP/M. 

			Jim MIlls
			CACHE Member

ABSTRACT FOR THE MOONLOC (Moon Location) PROGRAMS
MOONLOC1.BAS, MOONLOC2.BAS, MOONLOC3.BAS & MOONLOC4.BAS
Memory Requirements: 36K CP/M System.
These programs were initially designed for a GE timesharing
computer using GE BASIC and GE TYMSHARE SUPERBASIC (look at
the code for a good laugh).  The most valuable program for
those Amateur Radio Operators desiring to work EME (Earth-
Moon-Earth) "Moonbounce" will be MOONLOC5.BAS which is
written for MITS Altair Basic and should modify to MBASIC
or even BASIC-E with little difficulty.
Programs 1 and 2 require a Nautical Almanac (do you have one?).
Program 5 was modeled after program 3 which uses pre-dated
almanac data and increments to the present date.  The programs
output the moon's elevation and direction for specified times
in specified time increments.	James K. Mills WB9KFP
				CACHE Member

byte oct 1976 page 57
ABSTRACT FOR MORSE.ABS
MORSE CODE TRANSCEIVE PROGRAM

This program sends and receives Morse Code using appropriate
hardware interfacing to an Amateur Radio Station.  This program
should run in a 20K CP/M system, but it may require 24K.  The
details can be found in Byte magazine, Oct 1979, page 57.

			James K. Mills WB9KFP
			CACHE Member

PONG.ASM is the assembler source for a game program which
simulates the electronic TV game called "PONG".  It can be
assembled with ASM.  It requires a Processor Technonlog VDM or
SOL for the display of the ball and paddles.  It was submitted
to the users group earlier, but the file got clobbered
somewhere along the way.  The source was written by one person
(poorly sturctured and without comments and with non-standard
op codes) and was disassembled back into standard op codes)
and extensivly modified by someone else (which didn't help the
quality), making it difficult to modify.  In its present state,
it is useful for an enjoyable game of PONG.  Adult tire of it
quickly but kids love it.  Reviewed by Robert A. Van Valzah.

ABSTRACT FOR PRACTICE.ASM Written by James K. Mills
MORSE CODE PRACTICE PROGRAM
Memory requirement: 24K CP/M System.
REQUIRES Digital Research MAC Macro Assembler.
     This program was modelled after Bob Van Valzah's
TEACH program, but differs in that this program sends
text files (from disk) in Morse Code.  The speed is
set at about 15 WPM but may be changed by modifying
the WPM EQU statement in the program.  
     Invocation is PRACTICE FILENAME.TYP.
     Appropriate hardware is necessary to generate
the tone.
			James K. Mills WB9KFP
			CACHE Member

ABSTRACT FOR RANDTEXT.BAS Written By James K. Mills
RANDOM TEXT GENERATION PROGRAM

This program was written to go along with PRACTICE.ASM
for the purpose of generating random characters for
Morse Code Practice.  The program generates 5-letter
code groups of letters, numerals, and punctuation.

RANDTEXT should run ok in a 32K CP/M System.

			James K. Mills WB9KFP
			CACHE Member

ABSTRACT for RESIZE2.BAS & RESIZE3.BAS
Written by James K. Mills For Ward's Maillist Programs
Program requirements: CP/M System with Basic-E
Memory Requirements: Minimum of 32K, 48K preferred.
This program is used to resize maillist files used
with Ward's maillist program.  It will change the size
and, if modified in one line, will re-key the file for
Amateur Radio Club use: keying by call-sign rather than
by name.  The program has some slight advantage over
Ward's RESIZE program in that 100 records are buffered
in memory rather than one record at a time.  This may
be a liability if you don't have much memory, but it
only requres a slight change to buffer fewer records.
For use with Ward's original Maillist programs, see
RESIZE.DOC, included on this disk.
			James K. Mills
			CACHE Member

ABSTRACT FOR RTTY.ASM
RADIO-TELETYPE TRANSCEIVE PROGRAM
Memory Requirements: 24K CP/M System.
RTTY is a program for transmission/reception of
Amateur Radio RTTY signals.  Appropriate hardware
is required to interface to an Amateur Radio Station.
This program was developed from TTY.ASM, TTYR.ASM,
TTYR1.ASM, and TTYX.ASM which are included on this
disk for reference.
There are very few comments in the Source Code.
This may make modifications for less experienced
assembly language programmers difficult.
The program has some nice features, such as dumping
received signals to disk files, etc.
			James K. Mills WB9KFP
			CACHE Member

SSPLIB.FOR contains FORTRAN source for a set of subroutines for
solving simultaneous linear equations, curve fitting, function
plotting, fast sorting, matrix inversion, and linear equation
solution.  These routines could not be tested as I do not have
a FORTRAN compiler.  The info contained herein came with the
submission of these routines to the users group.  Reviewed by
Robert A. Van Valzah.

ABSTRACT FOR TEACH.ASM
Teach Morse Code Program
Memory requirements: 24K CP/M System.
This program is designed to teach Morse Code to someone who
does not already know the code.  It is fairly well written
and has the nice feature of giving a bar-graph of how well
you have done on each character.  It may be used for practice
for more speed of reception if you are a good typist.
Appropriate hardware is necessary to generate the one.  A
single bit output port connected to an amplifier and speaker
will do. 
			James K. Mills WB9KFP
			CACHE Member
