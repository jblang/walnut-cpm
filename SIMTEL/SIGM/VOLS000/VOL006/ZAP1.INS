.SBTTL /BREAK/
.phex
.pabs
.xsym
.xlink
.sall
%type=	\"Simulator(0) Polbox(1) Apple(2)-"
;
.setlin 100
.radix 16
;
.ife %type,[
.define .XT[ADDR]=
[.WORD	ADDR]]
;
.ifg %type,[
.define .XT[ADDR]=
[.WORD	ADDR-1]]
;
;;
.ife %type,[
LISTHT	=	10
TYPEW	=	^d64
DISPM	=	0F
ENTRY	=	1800]
.ife %type-1,[
BRKV	=	3F0
SOFTEV	=	3F2
PWREDUP	=	3F4
AMPERV	=	3F5
USRADR	=	3F8
NMI	=	3FB
IRQLOC	=	3FE
LISTHT	=	10
TYPEW	=	^d64
DISPM	=	0F
CONSTS	=	0BFF0
CONPRT	=	0BFF1
SAM76	=	0C000
ENTRY	=	0F000]
;
.ife %type-2,[
BRKV	=	3F0
SOFTEV	=	3F2
PWREDUP	=	3F4
AMPERV	=	3F5
USRADR	=	3F8
NMI	=	3FB
IRQLOC	=	3FE
APPLE	=	1
SLOTN	=	1E
BAUDR	=	1F
LISTHT	=	^d23
TYPEW	=	^d32
DISPM	=	07
SAM76	=	1000
ENTRY	=	0F000]
;
.ife %type,[
BASE	=	0E8
ptrBC	=	BASE-4
ptrDE	=	saveY
ptrHL	=	pcLO
regBC	=	saveP
regHL	=	BASE-2
;
saveBP	=	BASE-5
saveP	=	BASE+0
saveS	=	BASE+1
saveY	=	BASE+2
saveX	=	BASE+3
saveA	=	BASE+4
pcLO	=	BASE+5
pcHI	=	BASE+6]
;
.IFG %type,[
wndlft	=	20
wndwdth	=	21
wndtop	=	22
wndbtm	=	23
ch	=	24
cv	=	25
gbasl	=	26
gbash	=	27
basl	=	28
bash	=	29
bas2L	=	2A
bas2H	=	2B
H2	=	2C
LMNEM	=	2C
RTNL	=	2C
V2	=	2D
RMNEM	=	2D
RTNH	=	2D
MASK	=	2E
CHKSUM	=	2E
FORMAT	=	2E
LASTIN	=	2F
LENGTH	=	2F
SIGN	=	2F
COLOR	=	30
MODE	=	31
INVFLG	=	32
PROMPT	=	33
YSAV	=	34
YSAV1	=	35
CSWL	=	36
CSWH	=	37
KSWL	=	38
KSWH	=	39
PCL	=	3A
PCH	=	3B
XQT	=	3C
XQTNZ	=	3C
A1L	=	3C
A1H	=	3D
A2L	=	3E
A2H	=	3F
A3L	=	40
A3H	=	41
A4L	=	42
A4H	=	43
A5L	=	44
A5H	=	45
ACC	=	45
XREG	=	46
YREG	=	47
SPNT	=	48
STATUS	=	49
RNDL	=	4E
RNDH	=	4F
ACL	=	50
ACH	=	51
XTNDL	=	52
XTNDH	=	53
AUXL	=	54
AUXH	=	55
PICK	=	95
;
BASE	=	0E8
regA	=	BASE
regBC	=	BASE-6
ptrBC	=	BASE-4
ptrDE	=	A2L
ptrHL	=	pcLO
regHL	=	A1L
saveBP	=	BASE-5
saveP	=	STATUS
a1HI	=	A1H
a1LO	=	A1L
saveS	=	SPNT
saveY	=	YREG
saveX	=	XREG
saveA	=	ACC
pcLO	=	PCL
pcHI	=	PCH
]
;
;;
ptrC=ptrBC
ptrB=ptrBC+1
;
ptrE=ptrDE
ptrD=ptrDE+1
;
ptrL=ptrHL
ptrH=ptrHL+1
;
regC=	regBC
regB=	regBC+1
;
regL=regHL
regH=regHL+1
;
;
;
.loc	ENTRY
;
ZAPPLE:	jmp	BEGIN
ENTCI:	jmp	CI
ENTRI:	jmp	RI
ENTCO:	jmp	CO
ENTPO:	jmp	PO
ENTLO:	jmp	LO
ENTCST:	jmp	CSTS
	jmp	IOGET
	jmp	IOSET
	jmp	MEMCK
TRAP:	jmp	RETRP
;
;;
KUSER:	jmp	SAM76
;
;;
TBL:
.xt	ATSUM
.xt	ASSIGN
.xt	BFUNCT
.xt	CODEL
.xt	DISPLA
.xt	EXECUT
.xt	FILL
.xt	GOTO
.xt	HEXN
.xt	IUSER
.xt	JTEST
.xt	KUSER
.xt	LOAD
.xt	MOVE
.xt	NEXTIN
.xt	OUSER
.xt	PUTA
.xt	QUERY
.xt	READ
.xt	SUBS
.xt	TYPE
.xt	UNLD
.xt	VERIFY
.xt	WRITE
.xt	XAMIN
.xt	YSRCH
.xt	ZSIZE
;
;;
