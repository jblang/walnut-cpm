
                            END USER CHALLENGE

                        Brian Nalewajek for CCP/M

       I've presented a few programmer challenges in other issues of 
    this newsletter and we've had some interesting responses. This 
    time, however, it's going to be a bit different. The challenge is 
    not to the programmers, but rather to the end users. In the 
    programmer challenges, we put forward a problem in explicit terms, 
    looking for imaginative programming solutions. For the end user 
    challenge, we're looking for problems that would serve as a 
    challenge to the programmers. As you might imagine, such an open 
    invitation could prompt all kinds of hypothetical or impractical 
    entries. To give the challenge focus and relevance, I will be 
    setting up certain criteria for entries.

    1) GET REAL! - While calculating the number of angels that can sit 
    on the head of a pin might challenge programmers (to say nothing 
    of philosophers), we're looking for real life problems for which 
    you'd like a real life solution.

    2) NON-RECURSIVE! - A recursive procedure is one where the answer 
    becomes part of the question, which becomes part of the 
    answer.... What I mean by non-recursive in this case is non-computer 
    related. Don't ask for a way to get Z-System to load Wordstar 
    style overlays, and don't ask for a BASIC program to format MS-DOS 
    disks on a Kaypro II. Lift your eyes and imaginations from your 
    computer keyboards and give us a problem from your non-computer 
    related problem stack. Of course, we'd like to put our computers 
    to use in solving the problem, but we don't want to solve problems 
    for computers (not this time, at any rate).

    3) OBJECTIVE! - If your problem is one where the central issue is 
    subjective (opinion or preference), I doubt if the answers the 
    programmers can provide would be of much value. There are programs 
    that help shoppers select gifts, for example, a problem that is 
    subjective at it's core; such programs do, in fact, require a lot 
    of hard data, such as a data base of gifts with assigned qualities. 
    If your problem contains subjective elements, you must provide all 
    the supporting objective data and other criteria that would make a 
    programmed solution practical.

    4) (/) BIG FOUR! - The (/) is my as close as I can get to showing 
    a "Do not enter" sign in ASCII. The "BIG FOUR" are what I call the 
    very popular off-the-shelf programs that come under the headings 
    of spreadsheets, database managers, wordprocessors, and graphics 
    programs.  If the solution to your problem requires no more than a 
    routine application of one of these or similar packages, it won't 
    excite our programmers a whole lot. If you need help using a 
    spreadsheet to prepare your tax return, or a database to keep 
    track of your business clients, we can probably help you - but not 
    as part of this challenge. Our programmers may use some or all of 
    these packages in finding a solution, but let's hope it's in a 
    novel application.

    5) CLARITY! - State your problem as clearly as you can. Give us 
    all the relevant parameters and data. The old adage is "garbage 
    in, garbage out"; we want to give you real solutions to your real 
    problems, but we can only work with what you give us. 

       All the entries we receive will be evaluated with the above 
    considerations. We'll then place as many of your problems as 
    possible as challenges for the programmers. Then we'll see if POE's 
    reader-programmers are as sharp as they think they are. At best, 
    we'll have helped someone find a real solution to a problem; at 
    least, we'll have tried.         BRN..90


    [Lee - you can enter your address here for replys, or mine if 
    you'd rather. "All entries to POE End User Challenge c/o "ect..]
